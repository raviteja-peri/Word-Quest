metadata api for media resources  metadata api for media resources  wc recommendation  march  this version httpwwwworgtrrecmediaontapi latest published version httpwwwworgtrmediaontapi previous version httpwwwworgtrprmediaontapi editors florian stegmaier university of passau werner bailer joanneum research martin hffernig joanneum research wonsuk lee samsung electronics ltd chris poppe ghent university please refer to the errata for this document which may include some normative corrections see also translations copyright   wc mit ercim keio beihang all rights reserved wc liability trademark and document use rules apply abstract this specification defines an api to access metadata information related to media resources on the web the overall purpose is to provide developers with a convenient access to metadata information stored in different metadata formats the api provides means to access the set of metadata properties defined in the ontology for media resources  specification these properties are used as a pivot vocabulary in this api the core of this specification is the definition of api interfaces for retrieving metadata information in synchronous and asynchronous modes it also defines interfaces for structured return types along with the specification of the behavior of an api implementation status of this document this section describes the status of this document at the time of its publication other documents may supersede this document a list of current wc publications and the latest revision of this technical report can be found in the wc technical reports index at httpwwwworgtr this document has been reviewed by wc members by software developers and by other wc groups and interested parties and is endorsed by the director as a wc recommendation it is a stable document and may be used as reference material or cited from another document wcs role in making the recommendation is to draw attention to the specification and to promote its widespread deployment this enhances the functionality and interoperability of the web this document has been produced by the media annotations working group which is part of the wc video on the web activity the public is encouraged to send comments on this recommendation to the public mailing list publicmediaannotation@worg public archive use rec comment api in the subject line of your email the working group has adopted a public test suite and has produced an implementation report for this metadata api for media resources  no changes to this document have been made since the previous version the metadata api for media resources may be implemented in both clientonly built into a browser as a plugin or as a javascript library and clientserver serverside as a web service the level of implementation of this api in these two scenario summarized in the implementation report allowed to exit candidate recommendation nevertheless this api is not expected to be implemented natively in the browser code this document was produced by a group operating under the  february  wc patent policy wc maintains a public list of any patent disclosures made in connection with the deliverables of the group that page also includes instructions for disclosing a patent an individual who has actual knowledge of a patent which the individual believes contains essential claims must disclose the information in accordance with section  of the wc patent policy table of contents  introduction  formats in scope  formats out of scope  terminology  conformance  design consideration  api description  mediaresource interface  methods  examples in javascript  asyncmediaresource interface  methods  callback interfaces  propertycallback interface  methods  metadatacallback interface  methods  examples in javascript  syncmediaresource interface  methods  examples in javascript  mediaannotation interface  attributes  example in javascript  properties  identification properties  identifier  attributes  example in javascript  title  attributes  example in javascript  language  attributes  example in javascript  locator  attributes  example in javascript  creation properties  contributor  attributes  example in javascript  creator  attributes  example in javascript  madate  attributes  example in javascript  location  attributes  example in javascript  content properties  description  attributes  example in javascript  keyword  attributes  example in javascript  genre  attributes  example in javascript  rating  attributes  example in javascript  relational properties  relation  attributes  example in javascript  collection  attributes  example in javascript  rights properties  copyright  attributes  example in javascript  policy  attributes  example in javascript  distribution properties  publisher  attributes  example in javascript  targetaudience  attributes  example in javascript  fragments properties  fragment  attributes  example in javascript  namedfragment  attributes  example in javascript  technical properties  framesize  attributes  example in javascript  compression  attributes  example in javascript  duration  attributes  example in javascript  format  attributes  example in javascript  samplingrate  attributes  example in javascript  framerate  attributes  example in javascript  averagebitrate  attributes  example in javascript  numtracks  attributes  example in javascript  metadatasource interface  attributes  examples in javascript  api status codes  usage examples  usage as javascript api  usage as web service  implementation notes  multiple identifiers of media resources orfragements  missing fragment identifiers  interoperability of implementations  security considerations a web idl description b acknowledgements c references c normative references c informative references  introduction this specification defines an api to access metadata information related to media resources on the web the overall purpose is to provide developers with a convenient access to metadata information stored in different metadata formats the core properties defined in the ontology for media resources  specification mediaontology will be used as a pivot vocabulary in this api the description of relations between these core properties and the metadata formats in scope are documented in the ontology for media resources  specification mediaontology in order to provide crosscommunity data integration this api is described using the interface definition language web idl webidl the decision to use web idl which offers bindings for ecmascript and java is based on the use cases and requirements for ontology and metadata api for media resources  mediaannotreqs this api defines interfaces that enable usersapplications to consume metadata in an interoperable manner interoperability between metadata formats is ensured by the use of the ontology for media resources  specification mediaontology as pivot metadata format this api offers operations to request particular metadata information represented in a certain metadata format related to media resources on the web further it specifies the actual representation of the core properties and the behaviour of this api  formats in scope refers to the formats in scope of the ontology for media resources  specification mediaontology  formats out of scope refers to the formats out of scope of the ontology for media resources  specification mediaontology  terminology in this document the terms ontology media resource property mapping and property value types are to be interpreted as defined in section  of the ontology for media resources  specification mediaontology  conformance in addition to sections marked as nonnormative all authoring guidelines diagrams examples and notes in this specification are nonnormative everything else in this specification is normative the keywords must must not required should should not recommended may and optional in this specification are to be interpreted as described in rfc  design consideration this section discusses different usage scenarios that led to design of the api we consider two main scenarios where this api be implemented and invoked in the user agent or as a client accessing a web service in both clientonly and clientserver cases of the implementation the media resources andor the metadata sources are in many cases remote the api is by default specified as an asynchronous api ie the calls are not blocking but results or errors are returned using a callback mechanism in order to better support the web service case a synchronous mode is also defined the synchronous mode is optional the two scenarios are shown in figure  figure  two scenarios with different usage of this api this specification only defines the metadata api for media resources other components depicted in figure  eg accessextractionstorage of metadata are not covered scenario  clientonly user agent in the first scenario this api is implemented in the user agent ie built into a browser as a plugin or as a javascript library here there exist three possibilities to invoke the api by an external calling code an internal calling code behaving like a client or it is attached as an extension to a user agent usually such implementations are an example for asynchronous processing besides the metadata api for media resources  the user agent may include components for metadata access and extraction and mappings for a supported set of formats eg as defined in the property mapping table of the ontology for media resources  specification mediaontology further the metadata sources the media resource andor metadata documents must be retrievable the access eg establish connection retrieval to the metadata sources is handled by the user agent scenario  clientserver in the second scenario this api is implemented as a web service following the principles of serverside synchronous processing such an implementation would be typically used by a nonui client such as an agent harvesting metadata however this api can be also accessed from a user agent and used the same way as described in scenario  with the help of a clientside library for accessing the web service in the implementation of the web service this scenario also allows supporting a media repository eg content providers archive database movie store with the help of such a service the user agent can retrieve metadata sources which might have a custom metadata format not supported by a user agent in contrast to an integrated component see scenario  an implementation of this api in a web service can do more complex mappings on the fly than a component integrated in a user agent and can be more flexible eg supporting additional formats in both scenarios the api serves as a mediator between a client application and the actual metadata sources interoperability is ensured by defining i operations for accessing the metadata information ii a common object structure and iii api behaviour eg status codes following this an implementation has to implement this stack of components an implementation of the metadata api for media resources as defined in this document which provides the actual getter methods for the properties an implementation of the mappings from a specific source format to the core properties here the metadata api for media resources  should use the ontology for media resources  specification mediaontology where applicable a format specific api to access the metadata this can be an api for retrieving a metadata document describing a media resource eg an xml parser and a set of xpath statements or an extractor to read metadata embedded in the media resource eg a library to read exif information from jpeg images in order to define the context in which this api is applied at least a unidirectional reference from the media resource to the metadata document or vice versa is needed if this is not the case such a reference needs to be provided by the web application scenario  web service scenario  or media repository scenario  this api provides access to metadata information stored in different metadata formats as such different instances of the same property can exist  api description this api defines a number of interfaces using webidl these can be grouped in the following categories an interface defining the actual retrieval operations for metadata called mediaresource and provided in both synchronous and asynchronous versions see section  section  and section  an interface defining the data structure of response objectsmetadata annotations called mediaannotation and its specializations see section  and section  an interface defining a data structure for metadata sources called metadatasource see section  next the different interfaces and exposed operations are discussed implementations of this api must support asynchronous mode of operation may support the synchronous one and must support the interfaces defined in this document instead of exceptions a status code indicating the state of processing see section  is returned in the synchronous api or provided via a callback function in the asynchronous api in case an error occurs then the interfaces for the return types ie mediaannotation and its specializations and metadatasource are defined the idl fragment in appendix a of this specification must be interpreted as required for conforming idl fragments as described in the web idl specification webidl  mediaresource interface the mediaresource interface is the core of this api and provides operations to access the metadata properties of a specific media resource here a clear separation between asynchronous and synchronous mode of operation has been achieved by defining two implementing interfaces derived from mediaresource the asyncmediaresource and the syncmediaresource interface objects of these interfaces will be created by calling createmediaresource of the mediaresource interface the actual connection to a specified metadata source will be created with the execution of the getmediaproperty operation of asyncmediaresource or syncmediaresource interface the mediaresource argument identifies the media resource for which the implementation of this api should try to find relevant metadata sources optionally references to metadata sources can be passed using an array of objects each implementing the metadatasource interface see section  interface mediaresource     short         getsupportedmodes     mediaresource createmediaresource domstring mediaresource optional metadatasource metadatasources optional short mode  methods createmediaresource this operation instantiates an object of either asyncmediaresource or syncmediaresource interface further it allows to set the specific media resource and metadata sources to which this api is applied parameter type nullable optional description mediaresource domstring   this attribute must set the specific media resource that should be processed by the api metadatasources metadatasource   this attribute should specify additional metadata sources mode short   this attribute should specify the desired mode of operation  for asynchronous and  for synchronous mode should be used in the case the mode argument is omitted and the implementation supports both modes the asynchronous mode will be used no exceptions return type mediaresource getsupportedmodes this operation is called to identify the implemented mode the return codes should be as follows  for asynchronous  for synchronous and  for both modes no parameters no exceptions return type short  examples in javascript example for getsupportedmodes ma  new mediaresourcevar mode  magetsupportedmodes resulting in   supportedmodes     example for createmediaresource metadatasources  new metadatasourcemetadatasources  new metadatasource                         httpwwwworgwebvideoannotationsdraftsmetadata_formatsdc_examplexmldcmetadatasources  new metadatasource                         httpwwwworgwebvideoannotationswikiimagesmawgstockholmjpgexifmediaresource  new mediaresourceif mediaresourcegetsupportedmodes    mediaresourcegetsupportedmodes       asyncobject  mediaresourcecreatemediaresource                         httpwwwworgwebvideoannotationswikiimagesmawgstockholmjpg                         metadatasources                               else if mediaresourcegetsupportedmodes    mediaresourcegetsupportedmodes        syncobject  mediaresourcecreatemediaresource                         httpwwwworgwebvideoannotationswikiimagesmawgstockholmjpg                         metadatasources   asyncmediaresource interface the asyncmediaresource interface provides a number of operations that allow accessing the metadata of a media resource this interface must be implemented next we give the web idl description of the asyncmediaresource interface and describe the different operations that are part of it in this section the mediaannotations interface is used in the interface definitions it serves as a container to hold general values about properties enabling an iteration over a set of different properties its definition can be found in section  interface asyncmediaresource  mediaresource     void getmediaproperty domstring propertynames propertycallback successcallback errorcallback errorcallback  optional domstring fragment optional domstring sourceformat optional domstring language    void getoriginalmetadata domstring sourceformat metadatacallback successcallback errorcallback errorcallback  methods getmediaproperty this operation allows retrieval of the value of a specific property several or all properties in an asynchronous manner the specific property is passed as an argument and a list of objects is returned that hold the values according to the requested property these objects implement the mediaannotation interface described in section  depending on the requested property the returned objects implement a different subtypes inheriting from the mediaannotation interface for example requesting title gives back an array of objects implementing the title interface requesting creator results in objects implementing the creator interface and so on these interfaces are described in section  an example can be found here parameter type nullable optional description propertynames domstring   this argument identifies an array containing the properties for which the values need to be retrieved for an empty array all properties carrying values will be retrieved successcallback propertycallback   this argument holds a callback object for asynchronous requests to the property the successcallback object implements the propertycallback interface and holds a handleevent operation that needs to be called once all data for the requested property is gathered this handleevent operation needs to be called with a new mediaannotation array errorcallback errorcallback   this argument holds a callback object for failure of asynchronous requests to the property the errorcallback object implements the errorcallback interface and holds a handleevent operation that needs to be called if an attempt fails this handleevent operation needs to be called with a new domstring representing the status code of the error see section  for details fragment domstring   this argument contains a uri identifying the specific media fragment for which the metadata is requested the uri must conform to the uri for media fragment mediafragments specification this parameter is optional sourceformat domstring   this argument identifies a specific metadata format it should use the metadata format identifiers defined in the ontology for media resources  specification mediaontology if a metadata format is defined only the metadata available in the specified metadata format are retrieved this parameter is optional language domstring   this argument allows to identify the language of the metadata values for the metadata will only be returned if it is available in the specified language recommended best practice is to use bcp  bcp this parameter is optional no exceptions return type void getoriginalmetadata this operation allows retrieval of the original metadata according to the specified source format in an asynchronous manner an example can be found here parameter type nullable optional description sourceformat domstring   this argument identifies a specific metadata format it should use the metadata format identifiers defined in the ontology for media resources  specification mediaontology if a metadata format is defined only the metadata available in the specified metadata format are retrieved successcallback metadatacallback   this argument holds a callback object for asynchronous requests for the original metadata the successcallback object implements the metadatacallback interface and holds a handleevent operation that needs to be called once all properties having values are listed this handleevent operation needs to be called with a new domstring array holding the original metadata errorcallback errorcallback   this argument holds a callback object for failure of asynchronous requests for the original metadata the errorcallback object implements the errorcallback interface and holds a handleevent operation that needs to be called if an attempt fails this handleevent operation needs to be called with a new domstring representing the status code of the error see section  for details no exceptions return type void  callback interfaces  propertycallback interface the propertycallback interface holds a handleevent operation that needs to be called once all data for the requested property has been gathered interface propertycallback     void handleevent mediaannotation mediaannotations  methods handleevent this operation is called when all data is gathered corresponding to a request for values of one or more properties parameter type nullable optional description mediaannotations mediaannotation   this argument holds a list of objects with values according to the requested property these objects implement the mediaannotation interface described in section  depending on the requested property the returned objects implement a different subtypes inheriting from the mediaannotation interface no exceptions return type void  metadatacallback interface the metadatacallback interface holds a handleevent operation that needs to be called once the requested metadata has been gathered interface metadatacallback     void handleevent domstring metadata  methods handleevent this operation is called when all data is gathered corresponding to a request for the original metadata parameter type nullable optional description metadata domstring   this argument holds a list of domstrings representing the original metadata note that multiple metadata instances can exist eg one dublin core and one mpeg document no exceptions return type void  examples in javascript example for asynchronous getmediaproperty asyncmediaresource  mediaresourcecreatemediaresourcehttpwwwimdbcomtitlett new array asyncmediaresourcegetmediapropertytitle successcallback errorcallback                                   function successcallbackmediaannotation mediaannotations      resulting in    title            propertyname  title          value  planet of the apes          language  enus                    statuscode                 title            propertyname  title          value  monkey planet          language  enus                    statuscode                                     function errorcallbackdomstring error      resulting in   error  statuscode      example for asynchronous getoriginalmetadata  asyncmediaresource  mediaresourcecreatemediaresource                         httpwwwworgwebvideoannotationswikiimagesmawgstockholmjpg                          new array asyncmediaresourcegetoriginalmetadatadc successcallback errorcallbackfunction successcallbackdomstring metadata      resulting in    statuscode      originalmetadata  metadata xmlnshttpexampleorgmyapp                                         xmlnsxsihttpwwwworgxmlschemainstance                                         xsischemalocationhttpexampleorgmyapp httpexampleorgmyappschemaxsd                                         xmlnsdchttppurlorgdcelements                                           dctitledc titledctitle                                   metadata                                                    function errorcallbackdomstring error     resulting in   error  statuscode       syncmediaresource interface the syncmediaresource interface provides a number of operations to access the metadata of a media resource this interface may be implemented next we give the web idl description of the syncmediaresource interface for synchronous requests and describe the different operations that are part of it the mediaresource defines a constructor that can be called to construct the object based on an identifier of the media resource and optionally some metadata sources interface syncmediaresource  mediaresource     mediaannotation getmediaproperty domstring propertynames optional domstring fragment  optional domstring sourceformat optional domstring language    domstring       getoriginalmetadata domstring sourceformat  methods getmediaproperty this operation allows retrieval of the metadata of a specific property several or all properties in a synchronous manner the passed array holds the requested properties and an array of objects is returned if the array is empty every property holding values will be requested and returned the returned objects implement the mediaannotation interface see section  depending on the requested property the returned objects implement different subtypes inheriting from the mediaannotation interface for example requesting title gives back an array of objects implementing the title interface requesting creator results in objects implementing the creator interface and so on these subtypes are described in section  the operation returns a mediaannotation array holding the requested properties if an error occurs during retrieval a mediaannotation object with the corresponding status code eg   or  will be generated and inserted at the first position of the array an example can be found here in this section the mediaannotations interface is used in the interface definitions it serves as a container to hold general values about properties enabling an iteration over a set of different properties its explanation can be found in section  parameter type nullable optional description propertynames domstring   this argument holds the requested properties as an array if the array is empty each property holding values will be returned fragment domstring   this argument contains a uri identifying the specific media fragment for which the metadata is requested the uri must conform to the uri for media fragment mediafragments specification this parameter is optional sourceformat domstring   this argument identifies a specific metadata format it should use the metadata format identifiers defined in the ontology for media resources  specification mediaontology if a metadata format is defined only the metadata available in the specified metadata format is retrieved this parameter is optional language domstring   this argument allows to identify the language of the metadata values for the metadata will only be returned if it is available in the specified language recommended best practice is to use bcp  bcp this parameter is optional no exceptions return type mediaannotation getoriginalmetadata this operation allows retrieval of the original metadata according to the specified source format in a synchronous manner the operation returns a domstring array holding the status code of the request at the first and the original metadata at the second position an example can be found here parameter type nullable optional description sourceformat domstring   this argument identifies a specific metadata format it should use the metadata format identifiers defined in the ontology for media resources  specification mediaontology if a metadata format is defined only the metadata available in the specified metadata format is retrieved no exceptions return type domstring  examples in javascript the examples in this section use getmediaproperty to get an object implementing the mediaannotation interface the noerrorstatus function ensures that no error is present and the requested properties carry values we give some javascript examples on how to use the synchronous mediaresource interface and its operations example for synchronous getmediaproperty syncmediaresource  mediaresourcecreatemediaresourcehttpwwwimdbcomtitlett                          new array title  syncmediaresourcegetmediapropertytitle   if noerrorstatustitlestatuscode  true                                                     resulting in    title            propertyname  title          value  planet of the apes          language  enus                    statuscode                 title            propertyname  title          value  planet der affen          language  dede                    statuscode                      example for synchronous getoriginalmetadata syncmediaresource  mediaresourcecreatemediaresourcehttpwwwworgwebvideoannotationswikiimagesmawgstockholmjpg                         new array dcmetadata  syncmediaresourcegetoriginalmetadatadcif noerrorstatusdcmetadatastatuscode  true      resulting in    statuscode      originalmetadata  metadata xmlnshttpexampleorgmyapp                                         xmlnsxsihttpwwwworgxmlschemainstance                                         xsischemalocationhttpexampleorgmyapp httpexampleorgmyappschemaxsd                                         xmlnsdchttppurlorgdcelements                                           dctitledc titledctitle                                   metadata      mediaannotation interface mediaannotation interface is used as the return type of mediaresourcegetmediaproperty operation it is a container for holding general values about metadata properties as several metadata properties are defined as complex types specific derived types of mediaannotation have been defined adding their specific attributes however mediaannotation can be used as a generic return type to access a printable string representation of the property in the value attribute it also includes a status code in case of general errors the first element of the returned mediaannotation array contains the global error code otherwise the status can be given for each of the returned properties the following design considerations have been used for specifying the derived interfaces for each of the metadata properties for each metadata property an interface is derived from mediaannotation adding typed attributes according to the specification in the ontology document this api must fill value with a printable string representation it is recommended to follow these steps use a namelabel if present for a uri if a uri identifies a value known by this api use the appropriate label dereference a uri to obtain a label if possible return the uri create a string from the values of the set of attributes eg numeric values this approach possibly duplicates a string that is found in another attribute in the value attribute this is considered as an acceptable amount of redundancy for the benefit of having a generic value field for all metadata properties that can be used regardless of the specific metadata property and data type of the attributes if an attribute has type uristring the interface shall have two attributes one with link and one with label appended to the attribute name representing the uri and string respectively for consistency this approach is also followed if the attribute has only either uri or string as type this approach allows for user extensions by deriving from mediaannotation or one of the derived interfaces for one of the metadata properties interface mediaannotation     attribute domstring propertyname    attribute domstring value    attribute domstring language    attribute domstring sourceformat    attribute domstring fragmentidentifier    attribute domstring mappingtype    attribute short     statuscode  attributes fragmentidentifier of type domstring this attribute should be an uri determining the fragment for which the metadata is relevant no exceptions language of type domstring this attribute should hold the language of the metadata the attribute is empty if language is not applicable for a specific property recommended best practice is to use bcp  bcp no exceptions mappingtype of type domstring this attribute specifies the kind of mapping as discussed in the semantic level mappings the value of this attribute should be one of the mapping characteristics no exceptions propertyname of type domstring the name of the property must be specified and should correspond to the property names defined in the ontology for media resources  specificationmediaontology sourceformat of type domstring this attribute allows to specify the metadata source from which the metadata was retrieved it should use the metadata format identifiers defined in the ontology for media resources  specification mediaontology no exceptions statuscode of type short this attribute must specify the status code for the associated property eg  indicating a structured return value no exceptions value of type domstring this attribute must be filled with an printable string representation no exceptions  example in javascript the noerrorstatus function ensures that no error is present and the requested properties carry values the mediaannotation interface will be never instantiated  only instances of the derived interfaces will be created these must be filled at least with the parameters specified in the mediaannotation interface and may be filled with the specific attributes mediaannotation  imagegetmediapropertytitle   if noerrorstatusmediaannotationstatuscode  true                         resulting in    title            propertyname  title          value  gone with the wind          language  enus          sourceformat  mpeg          fragmentidentifier  httpwwwexamplecomvideoogvt          mappingtype  exact match          statuscode                  properties this section describes the different properties that can be requested through the mediaresourcegetmediaproperty operation when invoking this operation objects implementing the mediaannotation interface are returned that represent the specified property all properties are represented with an interface inherited from the mediaannotation interface following the design guidelines described above several of the following return type interfaces can hold the value of the property as both uri ie a pointer to a controlled vocabulary or as free text the uri is preferred and the respective attribute of the mediaannotation interface or specialized type shall be filled whenever possible ie when the information is included in or can be constructed from the source metadata in the following for each property a synchronous javascript example illustrates the usage of the property specific attributes in any case the general attributes of the mediaannotation interface could be also requested  identification properties  identifier when the mediaresourcegetmediaproperty operation is invoked with identifier as a value of the propertynames parameter an object implementing the identifier interface is returned representing the identifier property defined in the ontology for media resources  specification mediaontology interface identifier  mediaannotation     attribute domstring identifierlink  attributes identifierlink of type domstring this attribute holds a uri identifying the media resource no exceptions  example in javascript id  imagegetmediapropertyidentifier                                      resulting in    identifier            propertyname  identifier          identifierlink  urnuuidadfaca                              statuscode                   title when the mediaresourcegetmediaproperty operation is invoked with title as a value of the propertynames parameter an object implementing the title interface is returned representing the title property defined in the ontology for media resources  specification mediaontology interface title  mediaannotation     attribute domstring titlelabel    attribute domstring typelink    attribute domstring typelabel  attributes titlelabel of type domstring this attribute holds the title as a plain string no exceptions typelabel of type domstring this attribute holds the type of the title as a plain string no exceptions typelink of type domstring this attribute holds the type of the title as a uri no exceptions  example in javascript title  songgetmediapropertytitle                     resulting in    title            propertyname  title          titlelabel  artificial horizon           typelink  httpwwwebuchmetadatacsebu_objecttypecodecsxml          typelabel  album title          statuscode                  language when the mediaresourcegetmediaproperty operation is invoked with language as a value of the propertynames parameter an object implementing the language interface is returned representing the language property defined in the ontology for media resources  specification mediaontology interface language  mediaannotation     attribute domstring languagelink    attribute domstring languagelabel  attributes languagelabel of type domstring this attribute represents the language of the media resource as a plain string which can be filtered on in the getmediaproperty operation recommended best practice is to use bcp  bcp no exceptions languagelink of type domstring this attribute represents the language of the media resource as a uri no exceptions  example in javascript language  videogetmediapropertylanguage         resulting in    language            propertyname  language          languagelabel  enus                              statuscode                  locator when the mediaresourcegetmediaproperty operation is invoked with locator as a value of the propertynames parameter an object implementing the locator interface is returned representing the locator property defined in the ontology for media resources  specification mediaontology interface locator  mediaannotation     attribute domstring locatorlink  attributes locatorlink of type domstring this attribute specifies the location of the media resource by a uri no exceptions  example in javascript locator  imagegetmediapropertylocator resulting in    locator            propertyname  locator          locatorlink  httpwwwworgwebvideoannotationswikiimagesmawgstockholmjpg                              statuscode                   creation properties  contributor when the mediaresourcegetmediaproperty operation is invoked with contributor as a value of the propertynames parameter an object implementing the contributor interface is returned representing the contributor property defined in the ontology for media resources  specification mediaontology interface contributor  mediaannotation     attribute domstring contributorlink    attribute domstring contributorlabel    attribute domstring rolelink    attribute domstring rolelabel  attributes contributorlabel of type domstring this attribute represents the contributor ie the agent making the contribution as a plain string no exceptions contributorlink of type domstring this attribute represents the contributor ie the agent making the contribution as a uri no exceptions rolelabel of type domstring this attribute represents the role of the contributor as a plain string no exceptions rolelink of type domstring this attribute represents the role of the contributor as uri no exceptions  example in javascript contributor  videogetmediapropertycontributor resulting in    contributor            propertyname  contributor          contributorlink  httpenwikipediaorgwikitim_burton          contributorlabel  tim burton          rolelink  httpwwwimdbcomnamenm          rolelabel  director                              statuscode                   creator when the mediaresourcegetmediaproperty operation is invoked with creator as a value of the propertynames parameter an object implementing the creator interface is returned representing the creator property defined in the ontology for media resources  specification mediaontology interface creator  mediaannotation     attribute domstring creatorlink    attribute domstring creatorlabel    attribute domstring rolelink    attribute domstring rolelabel  attributes creatorlabel of type domstring this attribute represents the creator ie the agent participating in the creation of the media resource as a plain string no exceptions creatorlink of type domstring this attribute represents the creator ie the agent participating in the creation of the media resource as a uri no exceptions rolelabel of type domstring this attribute represents the role of the creator as a plain string no exceptions rolelink of type domstring this attribute represents the role of the creator as uri no exceptions  example in javascript creator  videogetmediapropertycreator resulting in    creator            propertyname  creator          creatorlink  httpdbpediaorgresourcewilliam_shakespeare          creatorlabel  william shakespeare          rolelink  httpwwwebuchmetadatacsebu_rolecodecsxml          rolelabel  playwright                              statuscode                  madate when the mediaresourcegetmediaproperty operation is invoked with date as a value of the propertynames parameter an object implementing the date interface is returned representing the date property defined in the ontology for media resources  specification mediaontology this property has been renamed from date into madate in order to avoid naming conflicts with other objects named date in web applications interface madate  mediaannotation     attribute domstring date    attribute domstring typelink    attribute domstring typelabel  attributes date of type domstring this attribute represents a date related to the media resource a date value must be represented using one of the specific datetime data types of xml schema depending on the available precision gyear gyearmonth date datetime or datetimestamp no exceptions typelabel of type domstring this attribute defines the category of date eg creation date broadcast date release date date recorded and date edited as a plain string no exceptions typelink of type domstring this attribute defines the category of date eg creation date broadcast date release date date recorded and date edited as a uri no exceptions  example in javascript madate  videogetmediapropertydate resulting in    madate            propertyname  date          date t          typelink  urnsmpteuleb          typelabel  modification date          statuscode                  location when the mediaresourcegetmediaproperty operation is invoked with location as a value of the propertynames parameter an object implementing the location interface is returned representing the location property defined inthe ontology for media resources  specification mediaontology interface location  mediaannotation     attribute domstring locationlink    attribute domstring locationlabel    attribute double    longitude    attribute double    latitude    attribute double    altitude    attribute domstring coordinatesystemlabel    attribute domstring coordinatesystemlink  attributes altitude of type double this attribute holds the altitude of the location wrt the coordinate system specified by the coordiatesystem attribute no exceptions coordinatesystemlabel of type domstring this attribute identifies the coordinate system used by its name no exceptions coordinatesystemlink of type domstring this attribute identifies the coordinate system used by a uri no exceptions latitude of type double this attribute holds the latitude of the location wrt the coordinate system specified by the coordiatesystem attribute no exceptions locationlabel of type domstring this attribute identifies the location by its name as a plain string no exceptions locationlink of type domstring this attribute identifies the location as a uri no exceptions longitude of type double this attribute holds the longitude of the location wrt the coordinate system specified by the coordiatesystem attribute no exceptions  example in javascript location  videogetmediapropertylocation resulting in    location            propertyname  location          locationlink  httpenwikipediaorgwikisan_jose_california          locationlabel  san jose          longitude            latitude            altitude            coordinatesystemlabel  wgs          coordinatesystemlink  httpwwwworggeowgs_pospoint          statuscode                  content properties  description when the mediaresourcegetmediaproperty operation is invoked with description as a value of the propertynames parameter an object implementing the description interface is returned representing the description property defined in the ontology for media resources  specification mediaontology interface description  mediaannotation     attribute domstring descriptionlabel  attributes descriptionlabel of type domstring this attribute contains a description of the content of the media resource no exceptions  example in javascript description  imagegetmediapropertydescription resulting in    description            propertyname  description          descriptionlabel  group picture of the wc mawg at the ff meeting in stockholm          statuscode                  keyword when the mediaresourcegetmediaproperty operation is invoked with keyword as a value of the propertynames parameter an object implementing the keyword interface is returned representing the keyword property defined in the ontology for media resources  specification mediaontology interface keyword  mediaannotation     attribute domstring keywordlabel    attribute domstring keywordlink  attributes keywordlabel of type domstring this attribute contains a keyword describing the content as a plain string no exceptions keywordlink of type domstring this attribute contains a uri representing a keyword describing the content no exceptions  example in javascript keyword  imagegetmediapropertykeyword resulting in    keyword            propertyname  keyword          keywordlabel  meeting with people from outside the organisation          keywordlink  httpswopencycorgconceptenmeetingwithorganizationaloutsiders                              statuscode                  keyword            propertyname  keyword          keywordlabel  standardisation          keywordlink  httppurlorgvocabulariesprincetonwnsynsetstandardizationnoun                              statuscode                   genre when the mediaresourcegetmediaproperty operation is invoked with genre as a value of the propertynames parameter an object implementing the genre interface is returned representing the genre property defined in the ontology for media resources  specification mediaontology interface genre  mediaannotation     attribute domstring genrelabel    attribute domstring genrelink  attributes genrelabel of type domstring this attribute represents the genre of the media resource as a plain string no exceptions genrelink of type domstring this attribute represents the genre of the media resource as a uri no exceptions  example in javascript genre  imagegetmediapropertygenre resulting in    genre            propertyname  genre          genrelabel  sports          genrelink  httpwwwebuchmetadatacsebu_contentgenrecsxml                              statuscode                   rating when the mediaresourcegetmediaproperty operation is invoked with rating as a value of the propertynames parameter an object implementing the rating interface is returned representing the rating property defined in the ontology for media resources  specification mediaontology interface rating  mediaannotation     attribute double    ratingvalue    attribute domstring ratingsystemlabel    attribute domstring ratingsystemlink    attribute double    minimum    attribute double    maximum  attributes maximum of type double this attribute specifies the maximum rating value in the rating system no exceptions minimum of type double this attribute specifies the minimum rating value in the rating system no exceptions ratingsystemlabel of type domstring this attribute identifies the rating system by a plain string no exceptions ratingsystemlink of type domstring this attribute identifies the rating system as a uri no exceptions ratingvalue of type double this attribute contains the value of the rating no exceptions  example in javascript rating  imagegetmediapropertyrating resulting in    rating            propertyname  rating          ratingvalue            ratingsystemlabel  john doe          ratingsystemlink  httpindividualsexamplecomjohndoe          minimum            maximum                                statuscode                   relational properties  relation when the mediaresourcegetmediaproperty operation is invoked with relation as a value of the propertynames parameter an object implementing the relation interface is returned representing the relation property defined in the ontology for media resources  specification mediaontology interface relation  mediaannotation     attribute domstring targetlink    attribute domstring targetlabel    attribute domstring typelink    attribute domstring typelabel  attributes targetlabel of type domstring this attribute identifies the related resource by a plain string no exceptions targetlink of type domstring this attribute identifies the related resource by a uri no exceptions typelabel of type domstring this attribute specifies the type of relationship by a plain string no exceptions typelink of type domstring this attribute specifies the type of relationship by a uri no exceptions  example in javascript relation  imagegetmediapropertyrelation resulting in    relation            propertyname  relation          targetlink  httpwwwworgwebvideoannotationswikiimagemawgstockholm_thumbjpg          targetlabel  group picture of mawg in stockholm          typelink  httpwwwebuchmetadatacsebu_howrelatedcsxml          typelabel  thumbnail                              statuscode                  collection when the mediaresourcegetmediaproperty operation is invoked with collection as a value of the propertynames parameter an object implementing the collection interface is returned representing the collection property defined inthe ontology for media resources  specification mediaontology interface collection  mediaannotation     attribute domstring collectionlink    attribute domstring collectionlabel  attributes collectionlabel of type domstring this attribute holds the name of the collection from which the media resource originates as a plain string no exceptions collectionlink of type domstring this attribute holds the name of the collection from which the media resource originates as uri no exceptions  example in javascript collection  imagegetmediapropertycollection resulting in    collection            propertyname  collection          collectionlink  httpindividualsexamplecomjohndoemyworkpictures          collectionlabel  my work pictures                              statuscode                   rights properties  copyright when the mediaresourcegetmediaproperty operation is invoked with copyright as a value of the propertynames parameter an object implementing the copyright interface is returned representing the copyright property defined in the ontology for media resources  specification mediaontology interface copyright  mediaannotation     attribute domstring copyrightlabel    attribute domstring holderlabel    attribute domstring holderlink  attributes copyrightlabel of type domstring this attribute contains the copyright statement as a plain string no exceptions holderlabel of type domstring this attribute identifies the copyright holder by a plain string no exceptions holderlink of type domstring this attribute identified the copyright holder by a uri no exceptions  example in javascript copyright  imagegetmediapropertycopyright resulting in    copyright            propertyname  copyright          copyrightlabel  all images in the collection are copyrighted by john doe          holderlabel  john doe          holderlink  httpindividualsexamplecomjohndoe                              statuscode                   policy when the mediaresourcegetmediaproperty operation is invoked with policy as a value of the propertynames parameter an object implementing the policy interface is returned representing the policy property defined in the ontology for media resources  specification mediaontology interface policy  mediaannotation     attribute domstring statementlink    attribute domstring statementlabel    attribute domstring typelink    attribute domstring typelabel  attributes statementlabel of type domstring this attribute contains a plain string of the policy statement no exceptions statementlink of type domstring this attribute contains a uri of the policy statement no exceptions typelabel of type domstring this attribute identifies the type of the policy as a uri as a plain string no exceptions typelink of type domstring this attribute identifies the type of the policy as a uri no exceptions  example in javascript policy  imagegetmediapropertypolicy resulting in    policy            propertyname  policy          statementlink  httpcreativecommonsorglicensesby          statementlabel  attribution  generic cc by           typelabel  license                              statuscode                  distribution properties  publisher when the mediaresourcegetmediaproperty operation is invoked with publisher as a value of the propertynames parameter an object implementing the publisher interface is returned representing the publisher property defined in the ontology for media resources  specification mediaontology interface publisher  mediaannotation     attribute domstring publisherlink    attribute domstring publisherlabel  attributes publisherlabel of type domstring this attribute represents the publisher as a plain string no exceptions publisherlink of type domstring this attribute represents the publisher as a uri no exceptions  example in javascript publisher  imagegetmediapropertypublisher resulting in    publisher            propertyname  publisher          publisherlabel  acme          publisherlink  httpcompanyexamplecomacme                              statuscode                   targetaudience when the mediaresourcegetmediaproperty operation is invoked with targetaudience as a value of the propertynames parameter an object implementing the targetaudience interface is returned representing the targetaudience property defined in the ontology for media resources  specification mediaontology interface targetaudience  mediaannotation     attribute domstring audiencelink    attribute domstring audiencelabel    attribute domstring classificationsystemlink    attribute domstring classificationsystemlabel  attributes audiencelabel of type domstring this attribute identifies the target audience by a plain string no exceptions audiencelink of type domstring this attribute identifies the target audience by a uri no exceptions classificationsystemlabel of type domstring this attribute specifies the classification system by a plain string no exceptions classificationsystemlink of type domstring this attribute specifies the classification system by a uri no exceptions  example in javascript targetaudience  imagegetmediapropertytargetaudience resulting in    targetaudience            propertyname  targetaudience          audiencelink  httpwwwmpaaorgratingswhateachratingmeansnc          audiencelabel  no one  and under admitted          classificationsystemlink  httpwwwmpaaorgratings          classificationsystemlabel  mpaa                              statuscode                  fragments properties  fragment when the mediaresourcegetmediaproperty operation is invoked with fragment as a value of the propertynames parameter an object implementing the fragment interface is returned representing the fragment property defined in the ontology for media resources  specification mediaontology interface fragment  mediaannotation     attribute domstring identifier    attribute domstring rolelink    attribute domstring rolelabel  attributes identifier of type domstring this attribute identifies the fragment as media fragment uri temporal spatial or track no exceptions rolelabel of type domstring this attribute identifies the role of the fragment as a plain string which can be filtered on in the getmediaproperty operation no exceptions rolelink of type domstring this attribute identifies the role of the fragment as a uri which can be filtered on in the getmediaproperty operation no exceptions  example in javascript fragment  moviegetmediapropertyfragment resulting in    fragment            propertyname  fragment          identifier  httpwwwexamplecomvideoogvt          rolelabel  chapter                              statuscode                  namedfragment when the mediaresourcegetmediaproperty operation is invoked with namedfragment as a value of the propertynames parameter an object implementing the namedfragment interface is returned representing the namedfragment property defined in the ontology for media resources  specification mediaontology interface namedfragment  mediaannotation     attribute domstring identifier    attribute domstring label  attributes identifier of type domstring this attribute identifies a named fragment by a media fragment uri no exceptions label of type domstring this attribute contains a plain text label of a named media fragment which can be used to contruct a media fragment uri fro a named fragment no exceptions  example in javascript namedfragment  moviegetmediapropertynamedfragment resulting in    namedfragment            propertyname  namedfragment          identifier  httpwwwexamplecomvideoogvt          label  kissscene          statuscode                   technical properties  framesize when the mediaresourcegetmediaproperty operation is invoked with framesize as a value of the propertynames parameter an object implementing the framesize interface is returned representing the framesize property defined in the ontology for media resources  specification mediaontology interface framesize  mediaannotation     attribute double    width    attribute double    height    attribute domstring unit  attributes height of type double this attribute represents the height of the frame no exceptions unit of type domstring this attribute represents the unit of the frame widthheight the default value is pixels no exceptions width of type double this attribute represents the width of the frame no exceptions  example in javascript framesize  imagegetmediapropertyframesize resulting in    framesize            propertyname  framesize          width            height            unit  pixels                              statuscode                   compression when the mediaresourcegetmediaproperty operation is invoked with compression as a value of the propertynames parameter an object implementing the compression interface is returned representing the compression property defined in the ontology for media resources  specification mediaontology interface framesize  mediaannotation     attribute domstring compressionlink    attribute domstring compressionlabel  attributes compressionlabel of type domstring this attribute specifies the compression type of the media resource as a plain string no exceptions compressionlink of type domstring this attribute specifies the compression type of the media resource by a uri no exceptions  example in javascript compression  videogetmediapropertycompression resulting in    compression            propertyname  compression          compressionlabel  havc          compressionlink  urnexampleorgcodingnamesituh                              statuscode                   duration when the mediaresourcegetmediaproperty operation is invoked with duration as a value of the propertynames parameter an object implementing the duration interface is returned representing the duration property defined in the ontology for media resources  specification mediaontology interface duration  mediaannotation     attribute double duration  attributes duration of type double this attribute represents the duration of the media resource in seconds as an double value no exceptions  example in javascript duration  videogetmediapropertyduration                     resulting in    duration            propertyname  duration          duration                                statuscode                   format when the mediaresourcegetmediaproperty operation is invoked with format as a value of the propertynames parameter an object implementing the format interface is returned representing the format property defined in the ontology for media resources  specification mediaontology interface format  mediaannotation     attribute domstring formatlink    attribute domstring formatlabel  attributes formatlabel of type domstring this attribute specifies the mime type of the media resource no exceptions formatlink of type domstring this attribute identifies the mime type of the media resource by a uri no exceptions  example in javascript format  imagegetmediapropertyformat resulting in    format            propertyname  format          formatlabel  imagejpeg          formatlink  httpdbpediaorgresourcejpeg                              statuscode                   samplingrate when the mediaresourcegetmediaproperty operation is invoked with samplingrate as a value of the propertynames parameter an object implementing the samplingrate interface is returned representing the samplingrate property defined in the ontology for media resources  specification mediaontology interface samplingrate  mediaannotation     attribute double samplingrate  attributes samplingrate of type double this attribute specifies the audio sampling rate in hz as a double no exceptions  example in javascript samplingrate  audiogetmediapropertysamplingrate resulting in    samplingrate            propertyname  samplingrate          samplingrate                                statuscode                   framerate when the mediaresourcegetmediaproperty operation is invoked with framerate as a value of the propertynames parameter an object implementing the framerate interface is returned representing the framerate property defined inthe ontology for media resources  specification mediaontology interface framerate  mediaannotation     attribute double framerate  attributes framerate of type double this attribute specifies the framerate in fps as a double value no exceptions  example in javascript framerate  videogetmediapropertyframerate resulting in    framerate            propertyname  framerate          framerate                                statuscode                   averagebitrate when the mediaresourcegetmediaproperty operation is invoked with averagebitrate as a value of the propertynames parameter an object implementing the averagebitrate interface is returned representing the averagebitrate property defined in the ontology for media resources  specification mediaontology interface averagebitrate  mediaannotation     attribute double averagebitrate  attributes averagebitrate of type double this attribute specifies the average bitrate in kbps as a double value no exceptions  example in javascript bitrate  videogetmediapropertyaveragebitrate resulting in    averagebitrate            propertyname  averagebitrate          averagebitrate                                statuscode                  numtracks when the mediaresourcegetmediaproperty operation is invoked with numtracks as a value of the propertynames parameter an object implementing the numtracks interface is returned representing the numtracks property defined in the ontology for media resources  specification mediaontology interface numtracks  mediaannotation     attribute short     number    attribute domstring typestring  attributes number of type short this attribute specifies the number of tracks as an integer value no exceptions typestring of type domstring this attribute specifies the type of the tracks that are counted as a plain string eg audio subtitle no exceptions  example in javascript numtracks  videogetmediapropertynumtracks resulting in    numtracks            propertyname  numtracks          number            typestring  audio                              statuscode                  metadatasource interface metadatasource interface is used to identify other metadata sources interface metadatasource     attribute domstring metadatasource    attribute domstring sourceformat  attributes metadatasource of type domstring an uri identifying the metadata source no exceptions sourceformat of type domstring the name of the actual metadata format it should use the metadata format identifiers defined in the ontology for media resources  specification mediaontology no exceptions  examples in javascript metadatasource  new metadatasourcehttpwwwworgwebvideoannotationsdraftsmetadata_formatsdc_examplexmldc  api status codes this section introduces a set of status codes for the defined api to indicate the system behavior as described in section  the status code is returned as one of the attributes of the mediaannotation object returned by a method call to the api these status codes are used on the api level and applied to either client side or server side implementations numerical code textual description example  ok property delivered correctly  no content property retrieved without content  partial content only a subset of the available data stored in the result set  bad request syntactical error  not found the queries resource is not found  unsupported media type get duration call on an image data store  property not defined in source format location is not defined in mediarss  internal server error internal library eg extractor crashes  property not supported a subset of properties implemented  usage examples  usage as javascript api this part illustrates some examples how to use this api using javascript in actual implementations moreover in these examples it is assumed that the implementation of this api knows where to find the metadata that corresponds to a specific media resource if necessary the location of the metadata can be configured by the use of the metadatasource interface the implementation should provide the mappings of different metadata formats to the core properties of the ontology for media resources  specification mediaontology example  return the name of the director of the movie apocalypse now search the video array for the one with title apocalypse now for var i   i  mediaresourcevideoarraylength i      request for the titles of the video the variable titles    will be filled with an array of mediaannotation objects     titles  mediaresourcevideoarrayigetmediapropertytitle            check if the request is finished correctly    if noerrorstatustitlesstatuscode  true         for var j   j  titleslength j              check if the title matches             if titlesjtitlelabel  apocalypse now                 request for the director of the video the variable results                 will be filled with an array of mediaannotation objects                 tempresults  mediaresourcevideoarrayigetmediapropertycontributor                   for var k   k  tempresultslength k                     if tempresultsirolelabel  director                         result  tempresultsi                        break                                                                 resulting in    contributor            propertyname  contributor          value  francis ford coppola                                        statuscode                 example  retrieve the title of the second song from the album joshua tree by u get the id of the second song using the fragments property tracks  albummediaresourcegetmediapropertyfragment   trackidentifier  tracksidentifier use this identifier to get the mediaresource object that represents the track mediaresource  new mediaresource if mediaresourcegetsupportedmodes    mediaresourcegetsupportedmodes       syncmediaresource  mediaresourcecreatemediaresourcetrackidentifier new array get the title of the track title  syncmediaresourcegetmediapropertytitle    resulting in    title            propertyname  title          value  i still havent found what im looking for                                        statuscode                            example  return the genre of the movie apocalypse now genre  moviegetmediapropertygenre   enus  resulting in     genre            propertyname  genre          value  action                                        statuscode                 genre            propertyname  genre          value  drama                                        statuscode                        usage as web service this part illustrates how this api could be implemented using web services note that web idl currently does not provide bindings for web services the given examples correspond to the examples given in section  for each property request httpexamplecommymediaresourcegetoriginalmetadatadc response json format   statuscode     originalmetadata  xml versionmetadata                         xmlnshttpexampleorgmyapp xmlnsxsihttpwwwworgxmlschemainstance                         xsischemalocationhttpexampleorgmyapp httpexampleorgmyappschemaxsd                         xmlnsdchttppurlorgdcelementsdctitledc titledctitlemetadata the following examples illustrate how to request values for the different properties request httpexamplecommymediaresourcemaqueryidentifier response json format   identifier          propertyname  identifier        identifierlink  urnuuidadfaca        statuscode            request httpexamplecommymediaresourcemaquerytitle response json format   title          propertyname  title        value  artificial horizon        typelink  httpwwwebuchmetadatacsebu_objecttypecodecsxml        typelabel  album title        statuscode            request httpexamplecommymediaresourcemaquerylanguage response json format   language          propertyname  language        languagelabel  enus        statuscode            request httpexamplecommymediaresourcemaquerylocator response json format   locator          propertyname  locator        locatorlink  httpwwwworgwebvideoannotationswikiimagesmawgstockholmjpg        statuscode            request httpexamplecommymediaresourcemaquerycontributor response json format   contributor          propertyname  contributor        contributorlink  httpenwikipediaorgwikitim_burton        contributorlabel  tim burton        rolelink  httpwwwimdbcomnamenm        rolelabel  director        statuscode            request httpexamplecommymediaresourcemaquerycreator response json format   creator          propertyname  creator        creatorlink  httpdbpediaorgresourcewilliam_shakespeare        creatorlabel  william shakespeare        rolelink  httpwwwebuchmetadatacsebu_rolecodecsxml        rolelabel  playwright        statuscode            request httpexamplecommymediaresourcemaquerydate response json format   madate          propertyname  date        date t        typelink  urnsmpteuleb        typelabel  modification date        statuscode            request httpexamplecommymediaresourcemaquerylocation response json format   location          propertyname  location        locationlink  httpenwikipediaorgwikisan_jose_california        locationlabel  san jose        longitude          latitude          altitude          coordinatesystemlabel  wgs        coordinatesystemlink  httpwwwworggeowgs_pospoint        statuscode            request httpexamplecommymediaresourcemaquerydescription response json format   description          propertyname  description        descriptionlabel  group picture of the wc mawg at the ff meeting in stockholm        statuscode            request httpexamplecommymediaresourcemaquerykeyword response json format   keyword          propertyname  keyword        keywordlabel  meeting with people from outside the organisation        keywordlink  httpswopencycorgconceptenmeetingwithorganizationaloutsiders        statuscode           keyword          propertyname  keyword        keywordlabel  standardisation        keywordlink  httppurlorgvocabulariesprincetonwnsynsetstandardizationnoun        statuscode            request httpexamplecommymediaresourcemaquerygenre response json format   genre          propertyname  genre        genrelabel  sports        genrelink  httpwwwebuchmetadatacsebu_contentgenrecsxml        statuscode            request httpexamplecommymediaresourcemaqueryrating response json format   rating          propertyname  rating        ratingvalue          ratingsystemlabel  john doe        ratingsystemlink  httpindividualsexamplecomjohndoe        minimum          maximum          statuscode            request httpexamplecommymediaresourcemaqueryrelation response json format   relation          propertyname  relation        targetlink  httpwwwworgwebvideoannotationswikiimagemawgstockholm_thumbjpg        targetlabel  group picture of mawg in stockholm        typelink  httpwwwebuchmetadatacsebu_howrelatedcsxml        typelabel  thumbnail        statuscode            request httpexamplecommymediaresourcemaquerycollection response json format   collection          propertyname  collection        collectionlink  httpindividualsexamplecomjohndoemyworkpictures        collectionlabel  my work pictures        statuscode            request httpexamplecommymediaresourcemaquerycopyright response json format   copyright          propertyname  copyright        copyrightlabel  all images in the collection are copyrighted by john doe        holderlabel  john doe        holderlink  httpindividualsexamplecomjohndoe        statuscode            request httpexamplecommymediaresourcemaquerypolicy response json format   policy          propertyname  policy        statementlink  httpcreativecommonsorglicensesby        statementlabel  attribution  generic cc by         typelabel  license        statuscode            request httpexamplecommymediaresourcemaquerypublisher response json format   publisher          propertyname  publisher        publisherlabel  acme        publisherlink  httpcompanyexamplecomacme        statuscode            request httpexamplecommymediaresourcemaquerytargetaudience response json format   targetaudience          propertyname  targetaudience        audiencelink  httpwwwmpaaorgratingswhateachratingmeansnc        audiencelabel  no one  and under admitted        classificationsystemlink  httpwwwmpaaorgratings        classificationsystemlabel  mpaa        statuscode            request httpexamplecommymediaresourcemaqueryfragment response json format   fragment          propertyname  fragment        identifier  httpwwwexamplecomvideoogvt        rolelabel  chapter        statuscode            request httpexamplecommymediaresourcemaquerynamedfragment response json format   namedfragment          propertyname  namedfragment        label  kissscene        identifier  httpwwwexamplecomvideoogvt        statuscode            request httpexamplecommymediaresourcemaqueryframesize response json format   framesize          propertyname  framesize        width          height          unit  pixels        statuscode            request httpexamplecommymediaresourcemaquerycompression response json format   compression          propertyname  compression        compressionlabel  havc        urnexampleorgcodingnamesituh        statuscode            request httpexamplecommymediaresourcemaqueryduration response json format   duration          propertyname  duration        duration          statuscode            request httpexamplecommymediaresourcemaqueryformat response json format   format          propertyname  format        formatlabel  imagejpeg        formatlink  httpdbpediaorgresourcejpeg        statuscode            request httpexamplecommymediaresourcemaquerysamplingrate response json format   samplingrate          propertyname  samplingrate        samplingrate          statuscode            request httpexamplecommymediaresourcemaqueryframerate response json format   framerate          propertyname  framerate        framerate          statuscode            request httpexamplecommymediaresourcemaqueryaveragebitrate response json format   averagebitrate           propertyname  averagebitrate         averagebitrate           statuscode             request httpexamplecommymediaresourcemaquerynumtracks response json format   numtracks           propertyname  numtracks         number           typestring  audio         statuscode              implementation notes this section contains recommendations for implementators for handling missing or multiple identifiers of media resourcesfragments as well as for interoperability of implementations  multiple identifiers of media resources or fragments in some source formats it could be possible to identify the resource or one of its fragments in multiple ways eg by one or more identifiers fragment name or temporalspatial fragment uris for example there could be a temporal media fragment which can be addressed by the time range that also has an assigned id in the rdf representation of the ontology for media resources this can be represented as recommended in the guidelines by using owlsameas to ensure a similar behaviour in the api an implementation should return all such identifiers in a response if queries to properties of a fragment with multiple identifiers are made the implementation should accept each of the alternative identifiers and return the same response for each of them  missing fragment identifiers there are source formats which may contain metadata about a fragment eg a track without specifying any kind of identifier for it for the rdf representation this is not a problem as blank nodes can be used in an api implementation a client requesting the list of fragments cannot query properties of a fragment in case there is no identifier an implementation should generate an identifier for the fragment in such a case and should ensure that it is valid for a sufficiently long time so that the client can use it in subsequent queries to properties of fragments the identifier is not guaranteed to remain permanently valid this can be implemented in different ways including the following in a sessionaware environment eg in the user agent in a web service environment with session handling the identifier could be bound to the session and remain valid at least for the duration of the session in a stateless environment the identifier could be the same for all clients and remain valid a defined time after it has been last used ie part of a query or response the identifier could be defined to be unique and permanent in that case the implementation has to manage the assignment of identifiers to metadata sources  interoperability of implementations the api can be implemented in two different modes the asynchronous mode is mandatory while the synchrounous one is optional in this context interoperability between these modes would be a desired feature in order to provide both processing modes based on the implementation of one mode only an implementation of the optional synchronous mode of the api eg in a web service is turned into the mandatory asynchronous communication by a wrapper therefore the required wrapper functionality is implemented in javascript using the web workers specification webworkers processing nonblocking scripts a demo of the wrapper code can be downloaded from mawgrepo first the existing operations of the mediaresource interface are adapted in order to support the synchronous as well as asynchronous mode mawg_apijs then the implementation of the asyncmediaresource interface wrapping the synchronous communication is added therefore the two operations of the asyncmediaresource interface getmediaproperty and getoriginalmetadata refer to the corresponding synchronous calls by web workers media_property_workerjs media_property_workerjs finally the result of the synchronous communication is pushed forward to the synchronous operation by invoking a callback function wrapping an asynchronous implementation by an synchronous call is infeasible in javascript since threads cannot be suspended and interact with concurrent ones nonetheless another programming language eg java can be used to warp asynchronous api calls in web service calls  security considerations this specification defines a api to access metadata information related to media resources on the web these apis will provide means for requesting metadata information which can already be accessed in one or different formats either as separate document or embedded in media resources as such this api introduces no additional security issue one should nevertheless note that some metadata could be used to access personal information about someone without declaration of agreement for example temporal and geographic information about a media resource could indirectly provide information about its creator there are related activities and technical documents in wc working on this topics such as policy requirements policyreqs in dap wg odrl  odrl pp  pp and pling wiki plingwiki a web idl description follow this link to download the webidl description as idl file interface mediaresource     short getsupportedmodes    mediaresource createmediaresourcedomstring mediaresource                optional metadatasource metadatasources optional short modeinterface asyncmediaresource  mediaresource     void getmediapropertydomstring propertynames propertycallback successcallback errorcallback errorcallback                optional domstring fragment optional domstring sourceformat optional domstring language     void getoriginalmetadata domstring sourceformat metadatacallback successcallback errorcallback errorcallbackinterface propertycallback     void handleevent mediaannotation mediaannotationsinterface metadatacallback    void handleevent domstring metadatainterface errorcallback    void handleevent domstring errorstatusinterface syncmediaresource  mediaresource     mediaannotation getmediapropertydomstring propertynames                   optional domstring fragment optional domstring sourceformat                   optional domstring language    domstring getoriginalmetadata domstring sourceformatinterface metadatasource    attribute domstring metadatasource   attribute domstring sourceformatinterface mediaannotation    attribute domstring propertyname   attribute domstring value   attribute domstring language   attribute domstring sourceformat   attribute domstring fragmentidentifier   attribute domstring mappingtype   attribute short     statuscodeinterface identifier  mediaannotation    attribute domstring identifierlinkinterface title  mediaannotation    attribute domstring titlelabel   attribute domstring typelink   attribute domstring typelabelinterface language  mediaannotation    attribute domstring languagelink   attribute domstring languagelabel  interface locator  mediaannotation    attribute domstring locatorlinkinterface contributor  mediaannotation    attribute domstring contributorlink   attribute domstring contributorlabel   attribute domstring rolelink   attribute domstring rolelabelinterface creator  mediaannotation    attribute domstring creatorlink   attribute domstring creatorlabel   attribute domstring rolelink   attribute domstring rolelabelinterface madate  mediaannotation    attribute domstring date    attribute domstring typelink   attribute domstring typelabelinterface location  mediaannotation    attribute domstring locationlink   attribute domstring locationlabel   attribute double    longitude   attribute double    latitude   attribute double    altitude   attribute domstring coordinatesystemlabel   attribute domstring coordinatesystemlinkinterface description  mediaannotation    attribute domstring descriptionlabelinterface keyword  mediaannotation    attribute domstring keywordlink   attribute domstring keywordlabelinterface genre  mediaannotation    attribute domstring genrelink   attribute domstring genrelabelinterface rating  mediaannotation    attribute double ratingvalue   attribute domstring ratingsystemlink   attribute domstring ratingsystemlabel   attribute double    min   attribute double    max interface relation  mediaannotation    attribute domstring targetlink   attribute domstring targetlabel   attribute domstring typelink   attribute domstring typelabelinterface collection  mediaannotation     attribute domstring collectionlink    attribute domstring collectionlabelinterface copyright  mediaannotation    attribute domstring copyrightlabel   attribute domstring holderlink   attribute domstring holderlabelinterface policy  mediaannotation    attribute domstring statementlink   attribute domstring statementlabel   attribute domstring typelink   attribute domstring typelabelinterface publisher  mediaannotation    attribute domstring publisherlink   attribute domstring publisherlabelinterface targetaudience  mediaannotation    attribute domstring audiencelink   attribute domstring audiencelabel   attribute domstring classificationsystemlink   attribute domstring classificationsystemlabelinterface fragment  mediaannotation    attribute domstring identifier   attribute domstring rolelink   attribute domstring rolelabelinterface namedfragment  mediaannotation    attribute domstring identifier   attribute domstring labelinterface framesize  mediaannotation    attribute double width   attribute double height   attribute domstring unitinterface compression  mediaannotation     attribute domstring compressionlink    attribute domstring compressionlabelinterface duration  mediaannotation     attribute double durationinterface format  mediaannotation     attribute domstring formatlink    attribute domstring formatlabelinterface samplingrate  mediaannotation     attribute double samplingrateinterface framerate  mediaannotation    attribute double framerate interface averagebitrate  mediaannotation    attribute double averagebitrateinterface numtracks  mediaannotation     attribute short  number    attribute domstring typestring    b acknowledgements this document is the work of the wc media annotations working group members of the working group are at the time of writing and by alphabetical order werner bailer joanneum research tobias brger public invited expert eric carlson apple inc pierreantoine champin universit de lyon ashish chawla public invited expert jaime delgado universitat politcnica de catalunya jeanpierre evain public invited expert martin hffernig joanneum research philip jgenstedt opera software ralf klamma public invited expert wonsuk lee samsung electronics co ltd vronique malais vrije universiteit erik mannens ibbt hui miao samsung electronics co ltd thierry michel wcercim frank nack university of amsterdam soohong daniel park samsung electronics co ltd silvia pfeiffer wc invited experts chris poppe ibbt victor rodrguez universitat politcnica de catalunya felix sasaki potsdam university of applied sciences david singer apple inc florian stegmaier public invited expert john strassner public invited expert joakim sderberg ericsson mari carmen surezfigueroa public invited expert thai wey then apple inc ruben tous universitat politcnica de catalunya raphal troncy eurecom vassilis tzouvaras kspace davy van deursen ibbt the people who have contributed to discussions on publicmediaannotation@worg are also gratefully acknowledged c references c normative references mediafragments raphael troncy erik mannens silvia pfeiffer and davy van deursen media fragments uri  wc recommendation  september  url httpwwwworgtrrecmediafrags mediaontology wonsuk lee werner bailer tobias brger et al media fragments uri  wc recommendation  february  url httpwwwworgtrrecmediaont rfc s bradner key words for use in rfcs to indicate requirement levels march  internet rfc  url httpwwwietforgrfcrfctxt webidl cameron mccormack web idl  april  wc candidate recommendation work in progress url httpwwwworgtrcrwebidl c informative references bcp a phillips m davis tags for identifying languages september  ietf best current practice url httptoolsietforghtmlbcp mawgrepo mawg code repository url httpsourceforgenetprojectsmawg mediaannotreqs wonsuk lee felix sasaki tobias brger vronique malais use cases and requirements for ontology and metadata api for media object wc working draft  january  url httpwwwworgtrwdmediaannotreqs odrl renato iannella open digital rights language odrl version  wc note  september  url httpwwwworgtrodrl pp matthias schunter rigo wenning the platform for privacy preferences  pp specification  november  wc note url httpwwwworgtrnotepp plingwiki policy languages interest group pling pling wiki url httpwwwworgpolicypling policyreqs laura arribas paddy byers marcin hanclik frederick hirsch david rogers device api access control use cases and requirements  march  wc working group note url httpwwwworgtrnotedappolicyreqs webworkers ian hickson web workers  may  wc candidate recommendation url httpwwwworgtrworkers