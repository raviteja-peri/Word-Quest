owl  web ontology language direct semantics second edition owl  web ontology language direct semantics second edition wc recommendation  december  this version httpwwwworgtrrecowldirectsemantics latest version series  httpwwwworgtrowldirectsemantics latest recommendation httpwwwworgtrowldirectsemantics previous version httpwwwworgtrperowldirectsemantics editors boris motik university of oxford peter f patelschneider nuance communications bernardo cuenca grau university of oxford contributors in alphabetical order ian horrocks university of oxford bijan parsia university of manchester uli sattler university of manchester please refer to the errata for this document which may include some normative corrections a colorcoded version of this document showing changes made since the previous version is also available this document is also available in these nonnormative formats pdf version see also translations copyright   wc mit ercim keio all rights reserved wc liability trademark and document use rules apply abstract the owl  web ontology language informally owl  is an ontology language for the semantic web with formally defined meaning owl  ontologies provide classes properties individuals and data values and are stored as semantic web documents owl  ontologies can be used along with information written in rdf and owl  ontologies themselves are primarily exchanged as rdf documents the owl  document overview describes the overall state of owl  and should be read before other owl  documents this document provides the direct modeltheoretic semantics for owl  which is compatible with the description logic sroiq furthermore this document defines the most common inference problems for owl  status of this document may be superseded this section describes the status of this document at the time of its publication other documents may supersede this document a list of current wc publications and the latest revision of this technical report can be found in the wc technical reports index at httpwwwworgtr summary of changes there have been no substantive changes since the previous version for details on the minor changes see the change log and colorcoded diff please send comments please send any comments to publicowlcomments@worg public archive although work on this document by the owl working group is complete comments may be addressed in the errata or in future revisions open discussion among developers is welcome at publicowldev@worg public archive endorsed by wc this document has been reviewed by wc members by software developers and by other wc groups and interested parties and is endorsed by the director as a wc recommendation it is a stable document and may be used as reference material or cited from another document wcs role in making the recommendation is to draw attention to the specification and to promote its widespread deployment this enhances the functionality and interoperability of the web patents this document was produced by a group operating under the  february  wc patent policy wc maintains a public list of any patent disclosures made in connection with the deliverables of the group that page also includes instructions for disclosing a patent table of contents  introduction  direct modeltheoretic semantics for owl   vocabulary  interpretations  object property expressions  data ranges  class expressions  satisfaction in an interpretation  class expression axioms  object property expression axioms  data property expression axioms  datatype definitions  keys  assertions  ontologies  models  inference problems  independence of the direct semantics from the datatype map in owl  dl informative  appendix change log informative  changes since recommendation  changes since proposed recommendation  changes since candidate recommendation  changes since last call  acknowledgments  references  normative references  nonnormative references  introduction this document defines the direct modeltheoretic semantics of owl  the semantics given here is strongly related to the semantics of description logics description logics and it extends the semantics of the description logic sroiq sroiq as the definition of sroiq does not provide for datatypes and punning the semantics of owl  is defined directly on the constructs of the structural specification of owl  owl  specification instead of by reference to sroiq for the constructs available in sroiq the semantics of sroiq trivially corresponds to the one defined in this document since each owl  dl ontology is an owl  ontology this document also provides a direct semantics for owl  lite and owl  dl ontologies this semantics is equivalent to the direct modeltheoretic semantics of owl  lite and owl  dl owl  semantics and abstract syntax furthermore this document also provides the direct modeltheoretic semantics for the owl  profiles owl  profiles the semantics is defined for owl  axioms and ontologies which should be understood as instances of the structural specification owl  specification parts of the structural specification are written in this document using the functionalstyle syntax owl  allows ontologies anonymous individuals and axioms to be annotated furthermore annotations themselves can contain additional annotations all these types of annotations however have no semantic meaning in owl  and are ignored in this document owl  declarations are used only to disambiguate class expressions from data ranges and object property from data property expressions in the functionalstyle syntax therefore they are not mentioned explicitly in this document  direct modeltheoretic semantics for owl  this section specifies the direct modeltheoretic semantics of owl  ontologies  vocabulary a datatype map formalizing datatype maps from the owl  specification owl  specification is a tuple d   ndt  nls  nfs   dt   ls   fs  with the following components ndt is a set of datatypes more precisely names of datatypes that does not contain the datatype rdfsliteral nls is a function that assigns to each datatype dt  ndt a set nlsdt of strings called lexical forms the set nlsdt is called the lexical space of dt nfs is a function that assigns to each datatype dt  ndt a set nfsdt of pairs  f  v  where f is a constraining facet and v is an arbitrary data value called the constraining value the set nfsdt is called the facet space of dt for each datatype dt  ndt the interpretation function  dt assigns to dt a set dtdt called the value space of dt for each datatype dt  ndt and each lexical form lv  nlsdt the interpretation function  ls assigns to the pair  lv  dt  a data value  lv  dt ls  dtdt for each datatype dt  ndt and each pair  f  v   nfsdt the interpretation function  fs assigns to  f  v  the set  f  v fs  dtdt the set of datatypes ndt of a datatype map d is not required to contain all datatypes from the owl  datatype map this allows one to talk about subsets of the owl  datatype map which may be necessary for the various profiles of owl  if however d contains a datatype dt from the owl  datatype map then nlsdt nfsdt dtdt  lv  dt ls for each lv  nlsdt and  f  v fs for each  f  v   nfsdt are required to coincide with the definitions for dt in the owl  datatype map a vocabulary v   vc  vop  vdp  vi  vdt  vlt  vfa  over a datatype map d is a tuple consisting of the following elements vc is a set of classes as defined in the owl  specification owl  specification containing at least the classes owlthing and owlnothing vop is a set of object properties as defined in the owl  specification owl  specification containing at least the object properties owltopobjectproperty and owlbottomobjectproperty vdp is a set of data properties as defined in the owl  specification owl  specification containing at least the data properties owltopdataproperty and owlbottomdataproperty vi is a set of individuals named and anonymous as defined in the owl  specification owl  specification vdt is a set containing all datatypes of d the datatype rdfsliteral and possibly other datatypes that is ndt   rdfsliteral   vdt vlt is a set of literals lvdt for each datatype dt  ndt and each lexical form lv  nlsdt vfa is the set of pairs  f  lt  for each constraining facet f datatype dt  ndt and literal lt  vlt such that  f   lv  dt ls   nfsdt where lv is the lexical form of lt and dt is the datatype of lt given a vocabulary v the following conventions are used in this document to denote different syntactic parts of owl  ontologies op denotes an object property ope denotes an object property expression dp denotes a data property dpe denotes a data property expression c denotes a class ce denotes a class expression dt denotes a datatype dr denotes a data range a denotes an individual named or anonymous lt denotes a literal and f denotes a constraining facet  interpretations given a datatype map d and a vocabulary v over d an interpretation i   i  d   c   op   dp   i   dt   lt   fa  named  for d and v is a tuple with the following structure i is a nonempty set called the object domain d is a nonempty set disjoint with i called the data domain such that dtdt  d for each datatype dt  vdt  c is the class interpretation function that assigns to each class c  vc a subset cc  i such that owlthingc  i and owlnothingc    op is the object property interpretation function that assigns to each object property op  vop a subset opop  i  i such that owltopobjectpropertyop  i  i and owlbottomobjectpropertyop    dp is the data property interpretation function that assigns to each data property dp  vdp a subset dpdp  i  d such that owltopdatapropertydp  i  d and owlbottomdatapropertydp    i is the individual interpretation function that assigns to each individual a  vi an element ai  i  dt is the datatype interpretation function that assigns to each datatype dt  vdt a subset dtdt  d such that  dt is the same as in d for each datatype dt  ndt and rdfsliteraldt  d  lt is the literal interpretation function that is defined as ltlt   lv  dt ls for each lt  vlt where lv is the lexical form of lt and dt is the datatype of lt  fa is the facet interpretation function that is defined as  f  lt fa   f  ltlt fs for each  f  lt   vfa named is a subset of i such that ai  named for each named individual a  vi the following sections define the extensions of  op  dt and  c to object property expressions data ranges and class expressions  object property expressions the object property interpretation function  op is extended to object property expressions as shown in table  table  interpreting object property expressions object property expression interpretation  op objectinverseof op    x  y    y  x   opop   data ranges the datatype interpretation function  dt is extended to data ranges as shown in table  all datatypes in owl  are unary so each datatype dt is interpreted as a unary relation over d  that is as a set dtdt  d owl  currently does not define data ranges of arity more than one however by allowing for nary data ranges the syntax of owl  provides a hook allowing implementations to introduce extensions such as comparisons and arithmetic an nary data range dr is interpreted as an nary relation drdt over d  that is as a set dtdt  dn table  interpreting data ranges data range interpretation  dt dataintersectionof dr  drn  drdt    drndt dataunionof dr  drn  drdt    drndt datacomplementof dr  dn  drdt where n is the arity of dr dataoneof lt  ltn   ltlt    ltnlt  datatyperestriction dt f lt  fn ltn  dtdt   f  lt fa     fn  ltn fa  class expressions the class interpretation function  c is extended to class expressions as shown in table  for s a set s denotes the number of elements in s table  interpreting class expressions class expression interpretation  c objectintersectionof ce  cen  cec    cenc objectunionof ce  cen  cec    cenc objectcomplementof ce  i  cec objectoneof a  an   ai    ani  objectsomevaluesfrom ope ce   x   y   x y   opeop and y  cec  objectallvaluesfrom ope ce   x   y   x y   opeop implies y  cec  objecthasvalue ope a   x   x  ai   opeop  objecthasself ope   x   x  x   opeop  objectmincardinality n ope   x   y   x  y   opeop   n  objectmaxcardinality n ope   x   y   x  y   opeop   n  objectexactcardinality n ope   x   y   x  y   opeop   n  objectmincardinality n ope ce   x   y   x  y   opeop and y  cec   n  objectmaxcardinality n ope ce   x   y   x  y   opeop and y  cec   n  objectexactcardinality n ope ce   x   y   x  y   opeop and y  cec   n  datasomevaluesfrom dpe  dpen dr   x   y   yn   x  yk   dpekdp for each   k  n and  y    yn   drdt  dataallvaluesfrom dpe  dpen dr   x   y   yn   x  yk   dpekdp for each   k  n imply  y    yn   drdt  datahasvalue dpe lt   x   x  ltlt   dpedp  datamincardinality n dpe   x   y   x  y   dpedp  n  datamaxcardinality n dpe   x   y   x  y   dpedp   n  dataexactcardinality n dpe   x   y   x  y   dpedp   n  datamincardinality n dpe dr   x   y   x  y   dpedp and y  drdt   n  datamaxcardinality n dpe dr   x   y   x  y   dpedp and y  drdt   n  dataexactcardinality n dpe dr   x   y   x  y   dpedp and y  drdt   n   satisfaction in an interpretation an axiom or an ontology is satisfied in an interpretation i   i  d   c   op   dp   i   dt   lt   fa  named  if the appropriate condition from the following sections holds  class expression axioms satisfaction of owl  class expression axioms in i is defined as shown in table  table  satisfaction of class expression axioms in an interpretation axiom condition subclassof ce ce  cec  cec equivalentclasses ce  cen  cejc  cekc for each   j  n and each   k  n disjointclasses ce  cen  cejc  cekc   for each   j  n and each   k  n such that j  k disjointunion c ce  cen  cc  cec    cenc and cejc  cekc   for each   j  n and each   k  n such that j  k  object property expression axioms satisfaction of owl  object property expression axioms in i is defined as shown in table  table  satisfaction of object property expression axioms in an interpretation axiom condition subobjectpropertyof ope ope  opeop  opeop subobjectpropertyof objectpropertychain ope  open  ope   y    yn   y  y   opeop and  and  yn  yn   openop imply  y  yn   opeop equivalentobjectproperties ope  open  opejop  opekop for each   j  n and each   k  n disjointobjectproperties ope  open  opejop  opekop   for each   j  n and each   k  n such that j  k objectpropertydomain ope ce   x  y   x  y   opeop implies x  cec objectpropertyrange ope ce   x  y   x  y   opeop implies y  cec inverseobjectproperties ope ope  opeop    x  y    y  x   opeop  functionalobjectproperty ope   x  y  y   x  y   opeop and  x  y   opeop imply y  y inversefunctionalobjectproperty ope   x  x  y   x  y   opeop and  x  y   opeop imply x  x reflexiveobjectproperty ope   x  x  i implies  x  x   opeop irreflexiveobjectproperty ope   x  x  i implies  x  x   opeop symmetricobjectproperty ope   x  y   x  y   opeop implies  y  x   opeop asymmetricobjectproperty ope   x  y   x  y   opeop implies  y  x   opeop transitiveobjectproperty ope   x  y  z   x  y   opeop and  y  z   opeop imply  x  z   opeop  data property expression axioms satisfaction of owl  data property expression axioms in i is defined as shown in table  table  satisfaction of data property expression axioms in an interpretation axiom condition subdatapropertyof dpe dpe  dpedp  dpedp equivalentdataproperties dpe  dpen  dpejdp  dpekdp for each   j  n and each   k  n disjointdataproperties dpe  dpen  dpejdp  dpekdp   for each   j  n and each   k  n such that j  k datapropertydomain dpe ce   x  y   x  y   dpedp implies x  cec datapropertyrange dpe dr   x  y   x  y   dpedp implies y  drdt functionaldataproperty dpe   x  y  y   x  y   dpedp and  x  y   dpedp imply y  y  datatype definitions satisfaction of datatype definitions in i is defined as shown in table  table  satisfaction of datatype definitions in an interpretation axiom condition datatypedefinition dt dr  dtdt  drdt  keys satisfaction of keys in i is defined as shown in table  table  satisfaction of keys in an interpretation axiom condition haskey ce  ope  opem   dpe  dpen    x  y  z    zm  w    wn  if x  cec and x  named and y  cec and y  named and  x  zi   opeiop and  y  zi   opeiop and zi  named for each   i  m and  x  wj   dpejdp and  y  wj   dpejdp for each   j  n then x  y  assertions satisfaction of owl  assertions in i is defined as shown in table  table  satisfaction of assertions in an interpretation axiom condition sameindividual a  an  aji  aki for each   j  n and each   k  n differentindividuals a  an  aji  aki for each   j  n and each   k  n such that j  k classassertion ce a  ai  cec objectpropertyassertion ope a a   ai  ai   opeop negativeobjectpropertyassertion ope a a   ai  ai   opeop datapropertyassertion dpe a lt   ai  ltlt   dpedp negativedatapropertyassertion dpe a lt   ai  ltlt   dpedp  ontologies an owl  ontology o is satisfied in an interpretation i if all axioms in the axiom closure of o with anonymous individuals standardized apart as described in section  of the owl  specification owl  specification are satisfied in i  models given a datatype map d an interpretation i   i  d   c   op   dp   i   dt   lt   fa  named  for d is a model of an owl  ontology o wrt d if an interpretation j   i  d   c   op   dp   j   dt   lt   fa  named  for d exists such that  j coincides with  i on all named individuals and j satisfies o thus an interpretation i satisfying o is also a model of o in contrast a model i of o may not satisfy o directly however by modifying the interpretation of anonymous individuals i can always be coerced into an interpretation j that satisfies o  inference problems let d be a datatype map and v a vocabulary over d furthermore let o and o be owl  ontologies ce ce and ce class expressions and a a named individual such that all of them refer only to the vocabulary elements in v furthermore variables are symbols that are not contained in v finally a boolean conjunctive query q is a closed formula of the form  x    xn  y    ym   a    ak  where each ai is an atom of the form cs opst or dpsu with c a class op an object property dp a data property s and t individuals or some variable xj and u a literal or some variable yj the following inference problems are often considered in practice ontology consistency o is consistent or satisfiable wrt d if a model of o wrt d and v exists ontology entailment o entails o wrt d if every model of o wrt d and v is also a model of o wrt d and v ontology equivalence o and o are equivalent wrt d if o entails o wrt d and o entails o wrt d ontology equisatisfiability o and o are equisatisfiable wrt d if o is satisfiable wrt d if and only if o is satisfiable wrt d class expression satisfiability ce is satisfiable wrt o and d if a model i   i  d   c   op   dp   i   dt   lt   fa  named  of o wrt d and v exists such that cec   class expression subsumption ce is subsumed by a class expression ce wrt o and d if cec  cec for each model i   i  d   c   op   dp   i   dt   lt   fa  named  of o wrt d and v instance checking a is an instance of ce wrt o and d if ai  cec for each model i   i  d   c   op   dp   i   dt   lt   fa  named  of o wrt d and v boolean conjunctive query answering q is an answer wrt o and d if q is true in each model of o wrt d and v according to the standard definitions of firstorder logic in order to ensure that ontology entailment class expression satisfiability class expression subsumption and instance checking are decidable the following restriction wrt o needs to be satisfied each class expression of type minobjectcardinality maxobjectcardinality exactobjectcardinality and objecthasself that occurs in o ce ce and ce can contain only object property expressions that are simple in the axiom closure ax of o for ontology equivalence to be decidable o needs to satisfy this restriction wrt o and vice versa these restrictions are analogous to the first condition from section  of the owl  specification owl  specification  independence of the direct semantics from the datatype map in owl  dl informative owl  dl has been defined so that the consequences of an owl  dl ontology o do not depend on the choice of a datatype map as long as the datatype map chosen contains all the datatypes occurring in o this statement is made precise by the following theorem and it has several useful consequences one can apply the direct semantics to an owl  dl ontology o by considering only the datatypes explicitly occurring in o when referring to various reasoning problems the datatype map d need not be given explicitly as it is sufficient to consider an implicit datatype map containing only the datatypes from the given ontology owl  dl reasoners can provide datatypes not explicitly mentioned in this specification without fear that this will change the meaning of owl  dl ontologies not using these datatypes theorem ds let o and o be owl  dl ontologies over a vocabulary v and d   ndt  nls  nfs   dt   ls   fs  a datatype map such that each datatype mentioned in o and o is rdfsliteral a datatype defined in the respective ontology or it occurs in ndt furthermore let d   ndt  nls  nfs   dt    ls    fs   be a datatype map such that ndt  ndt nlsdt  nlsdt and nfsdt  nfsdt for each dt  ndt and  dt   ls  and  fs  are extensions of  dt  ls and  fs respectively then o entails o wrt d if and only if o entails o wrt d proof without loss of generality one can assume o and o to be in negationnormal form description logics furthermore since datatype definitions in o and o are acyclic one can assume that each defined datatype has been recursively replaced with its definition thus all datatypes in o and o are from ndt   rdfsliteral  the claim of the theorem is equivalent to the following statement an interpretation i wrt d and v exists such that o is and o is not satisfied in i if and only if an interpretation i wrt d and v exists such that o is and o is not satisfied in i the  direction is trivial since each interpretation i wrt d and v is also an interpretation wrt d and v for the  direction assume that an interpretation i   i  d   c   op   dp   i   dt   lt   fa  named  wrt d and v exists such that o is and o is not satisfied in i let i   i  d   c    op   dp    i   dt    lt    fa   named  be an interpretation such that d is obtained by extending d with the value space of all datatypes in ndt  ndt  c  coincides with  c on all classes and  dp  coincides with  dp on all data properties apart from owltopdataproperty clearly datacomplementof dr dt  datacomplementof dr dt  for each data range dr that is either a datatype a datatype restriction or an enumerated data range the owltopdataproperty property can occur in o and o only in tautologies the interpretation of all other data properties is the same in i and i so cec  cec  for each class expression ce occurring in o and o therefore o is and o is not satisfied in i qed  appendix change log informative  changes since recommendation this section summarizes the changes to this document since the recommendation of  october  with the publication of the xml schema definition language xsd  part  datatypes recommendation of  april  the elements of owl  which are based on xsd  are now considered required and the note detailing the optional dependency on the xsd  candidate recommendation of  april  has been removed from the status of this document section a bug in the specification of the semantics of keys in section  was fixed by replacing the isnamed function defined in section  with an extension of interpretations as defined in section  to include a set named that contains all those elements interpreting named individuals minor typographical errors were corrected as detailed on the owl  errata page  changes since proposed recommendation no changes have been made to this document since the proposed recommendation of  september   changes since candidate recommendation this section summarizes the changes to this document since the candidate recommendation of  june  an editorial comment was added to clarify the role played by the owl  datatype map  changes since last call this section summarizes the changes to this document since the last call working draft of  april  some minor editorial changes were made  acknowledgments the starting point for the development of owl  was the owl member submission itself a result of user and developer feedback and in particular of information gathered during the owl experiences and directions owled workshop series the working group also considered postponed issues from the webont working group this document has been produced by the owl working group see below and its contents reflect extensive discussions within the working group as a whole the editors extend special thanks to markus krtzsch fzi michael schneider fzi and thomas schneider university of manchester for their thorough reviews the regular attendees at meetings of the owl working group at the time of publication of this document were jie bao rpi diego calvanese free university of bozenbolzano bernardo cuenca grau oxford university computing laboratory martin dzbor open university achille fokoue ibm corporation christine golbreich universit de versailles stquentin and lirmm sandro hawke wcmit ivan herman wcercim rinke hoekstra university of amsterdam ian horrocks oxford university computing laboratory elisa kendall sandpiper software markus krtzsch fzi carsten lutz universitt bremen deborah l mcguinness rpi boris motik oxford university computing laboratory jeff pan university of aberdeen bijan parsia university of manchester peter f patelschneider bell labs research alcatellucent sebastian rudolph fzi alan ruttenberg science commons uli sattler university of manchester michael schneider fzi mike smith clark  parsia evan wallace nist zhe wu oracle corporation and antoine zimmermann deri galway we would also like to thank past members of the working group jeremy carroll jim hendler and vipul kashyap  references  normative references owl  specification owl  web ontology language structural specification and functionalstyle syntax second edition boris motik peter f patelschneider bijan parsia eds wc recommendation  december  httpwwwworgtrrecowlsyntax latest version available at httpwwwworgtrowlsyntax  nonnormative references description logics the description logic handbook theory implementation and applications second edition franz baader diego calvanese deborah l mcguinness daniele nardi and peter f patelschneider eds cambridge university press  also see the description logics home page owl  semantics and abstract syntax owl web ontology language semantics and abstract syntax peter f patelschneider patrick hayes and ian horrocks eds wc recommendation  february  httpwwwworgtrrecowlsemantics latest version available at httpwwwworgtrowlsemantics owl  profiles owl  web ontology language profiles second edition boris motik bernardo cuenca grau ian horrocks zhe wu achille fokoue carsten lutz eds wc recommendation  december  httpwwwworgtrrecowlprofiles latest version available at httpwwwworgtrowlprofiles sroiq the even more irresistible sroiq ian horrocks oliver kutz and uli sattler in proc of the th int conf on principles of knowledge representation and reasoning kr  aaai press 