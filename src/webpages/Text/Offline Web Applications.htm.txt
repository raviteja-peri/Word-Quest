offline web applications offline web applications wc working group note  may  this version httpwwwworgtrnoteofflinewebapps latest version httpwwwworgtrofflinewebapps editors anne van kesteren opera software asa annevk@operacom ian hickson google inc copyright   wc mit ercim keio all rights reserved wc liability trademark and document use rules apply abstract html  contains several features that address the challenge of building web applications that work while offline this document highlights these features sql offline application caching apis as well as onlineoffline events status and the localstorage api from html  and provides brief tutorials on how these features might be used to create web applications that work offline html status of this document this section describes the status of this document at the time of its publication other documents may supersede this document a list of current wc publications and the latest revision of this technical report can be found in the wc technical reports index at httpwwwworgtr offline web applications is a working group note produced by the html working group part of the html activity comments are welcome on the publichtmlcomments@worg mailing list which is publicly archived publication as a working group note does not imply endorsement by the wc membership this is a draft document and may be updated replaced or obsoleted by other documents at any time it is inappropriate to cite this document as other than work in progress this document was produced by a group operating under the  february  wc patent policy the group does not expect this document to become a wc recommendation wc maintains a public list of any patent disclosures made in connection with the deliverables of the group that page also includes instructions for disclosing a patent an individual who has actual knowledge of a patent which the individual believes contains essential claims must disclose the information in accordance with section  of the wc patent policy table of contents  introduction  sql  offline application caching apis  related apis references acknowledgments  introduction users of typical online web applications are only able to use the applications while they have a connection to the internet when they go offline they can no longer check their email browse their calendar appointments or prepare presentations with their online tools meanwhile native applications provide those features email clients cache folders locally calendars store their events locally presentation packages store their data files locally in addition while offline users are dependent on their http cache to obtain the application at all since they cannot contact the server to get the latest copy the html  specification provides two solutions to this a sqlbased database api for storing data locally and an offline application http cache for ensuring applications are available even when the user is not connected to their network  sql the clientside sql database in html  enables structured data storage this can be used to store emails locally for an email application or for a cart in an online shopping site the api to interact with this database is asynchronous which ensures that the user interface doesnt lock up because database interaction can occur in multiple browser windows at the same time the api supports transactions to create a database object you use the opendatabase method on the window object it takes four arguments a database name a database version a display name and an estimated size in bytes of the data to be stored in the database for instance var db  opendatabasenotes  the example notes app  now on this database we can use the transaction method the transaction method takes one to three arguments a transaction callback an error callback and a success callback the transaction callback gets passed a sql transaction object on which you can use the executesql method this method takes from one to four arguments a sql statement arguments a sql statement callback and a sql statement error callback the sql statement callback gets passed the transaction object and a sql statement result object which gives access to the rows last inserted id et cetera to complete the infrastructure for the notes application wed add the following code function rendernoterow    renders the note somewherefunction reporterrorsource message    report errorfunction rendernotes   dbtransactionfunctiontx     txexecutesqlcreate table if not exists notestitle text body text           txexecutesqlselect  from notes  functiontx rs       forvar i   i  rsrowslength i         rendernotersrowsi            function insertnotetitle text   dbtransactionfunctiontx     txexecutesqlinsert into notes values   title text       functiontx rs                      functiontx error         reporterrorsql errormessage          offline application caching apis the mechanism for ensuring web applications are available even when the user is not connected to their network is the manifest attribute on the html element the attribute takes a uri to a manifest which specifies which files are to be cached the manifest has a textcachemanifest mime type a typical file looks like this cache manifestindexhtmlhelphtmlstyledefaultcssimageslogopngimagesbackgoundpngnetworkservercgi this file specifies several files to cache and then specifies that servercgi should never be cached so that any attempt to access that file will bypass the cache the manifest can then be linked to by declaring it in the html application like this doctype htmlhtml manifestcachemanifest the servercgi file would be whitelisted put in the network section so that it can be contacted to get updates from the server as in eventsource srcservercgi the eventsource element is a new feature in html  that allows servers to continuously stream updates to a web page the application cache mechanism also supports a way to opportunistically cache from the server a group of files matching a common prefix with the ability to have a fallback page for rendering those pages when offline it also provides a way for scripts to add and remove entries from the cache dynamically and a way for applications to atomically update their cache to new files optionally presenting custom ui during the update  related apis in addition to those apis html  also defines an online attribute on the navigator object so you can determine whether you are currently online var online  navigatoronline changes to this attribute are indicated through the online and offline events that are both dispatched on the window object for simple synchronous storage access html  introduces the localstorage attribute on the window object localstoragestatus  idling references html work in progress html  i hickson editor whatwg  web forms  i hickson editor whatwg october  html  i hickson d hyatt editors wc  web forms  i hickson editor wc october  acknowledgments the editors would like to thank chris wilson dion almaer james graham julian reschke henri sivonen patrick d f ion and philip taylor for their contributions to this document also thanks to dan connolly for talking us into writing it during the first html wg meeting in boston