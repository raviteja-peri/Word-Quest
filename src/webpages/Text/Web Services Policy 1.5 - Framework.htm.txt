web services policy   framework web services policy   framework wc recommendation  september  this version httpwwwworgtrrecwspolicy latest version httpwwwworgtrwspolicy previous version httpwwwworgtrprwspolicy editors asir s vedamuthu microsoft corporation david orchard bea systems inc frederick hirsch nokia maryann hondo ibm corporation prasad yendluri webmethods a subsidiary of software ag toufic boubez layer  technologies mit yalinalp sap ag please refer to the errata for this document which may include some normative corrections see also translations this document is also available in these nonnormative formats pdf postscript xml and plain text copyright   wc mit ercim keio all rights reserved wc liability trademark and document use rules apply abstract the web services policy   framework provides a general purpose model and corresponding syntax to describe the policies of entities in a web servicesbased system web services policy framework defines a base set of constructs that can be used and extended by other web services specifications to describe a broad range of service requirements and capabilities status of this document this section describes the status of this document at the time of its publication other documents may supersede this document a list of current wc publications and the latest revision of this technical report can be found in the wc technical reports index at httpwwwworgtr this is the wc recommendation of the web services policy   framework specification it has been produced by the web services policy working group which is part of the wc web services activity this document has been reviewed by wc members by software developers and by other wc groups and interested parties and is endorsed by the director as a wc recommendation it is a stable document and may be used as reference material or cited from another document wcs role in making the recommendation is to draw attention to the specification and to promote its widespread deployment this enhances the functionality and interoperability of the web the working group released a test suite along with an implementation report a diffmarked version against the previous version of this document is available the working group is tracking all comments via bugzilla and highly prefers to receive comments via this system if access to bugzilla is not feasible you may send your comments to the mailing list publicwspolicycomments@worg mailing list public archive each bugzilla entry and email message should contain only one comment all comments on this specification should be made following the description for issues of the working group this document was produced by a group operating under the  february  wc patent policy wc maintains a public list of any patent disclosures made in connection with the deliverables of the group that page also includes instructions for disclosing a patent an individual who has actual knowledge of a patent which the individual believes contains essential claims must disclose the information in accordance with section  of the wc patent policy table of contents  introduction  example  notations and terminology  notational conventions  extensibility  xml namespaces  terminology  policy model  policy assertion  policy alternative  policy  policies of entities in a web services based system  policy expression  normal form policy expression  policy identification  compact policy expression  optional policy assertions  policy assertion nesting  policy operators  policy references  policy inclusion  normalization  ignorable policy assertions  policy intersection  use of iris in policy expressions  security considerations  information disclosure threats  spoofing and tampering threats  downgrade threats  repudiation threats  denial of service threats  general xml considerations  conformance appendices a the applicationwspolicyxml media type a registration b references b normative references b other references c acknowledgements nonnormative  introduction web services policy   framework defines a framework and a model for expressing policies that refer to domainspecific capabilities requirements and general characteristics of entities in a web servicesbased system a policy is a collection of policy alternatives a policy alternative is a collection of policy assertions a policy assertion represents a requirement capability or other property of a behavior a policy expression is an xml infoset representation of its policy either in a normal form or in its equivalent compact form some policy assertions specify traditional requirements and capabilities that will manifest themselves in the messages exchangedeg authentication scheme transport protocol selection other policy assertions have no wire manifestation in the messages exchanged yet are relevant to service selection and usage eg privacy policy qos characteristics web services policy   framework provides a single policy language to allow both kinds of assertions to be expressed and evaluated in a consistent manner web services policy   framework does not cover discovery of policy policy scopes and subjects or their respective attachment mechanisms a policy attachment is a mechanism for associating policy with one or more policy scopes a policy scope is a collection of policy subjects to which a policy applies a policy subject is an entity eg an endpoint message resource interaction with which a policy can be associated web services policy   attachment web services policy attachment defines such policy attachment mechanisms especially for associating policy with arbitrary xml elements xml  wsdl artifacts wsdl  wsdl  core language and uddi elements uddi api  uddi data structure  uddi  other specifications are free to define either extensions to the mechanisms defined in web services policy   attachment web services policy attachment or additional mechanisms not covered by web services policy   attachment web services policy attachment for purposes of associating policy with policy scopes and subjects  example example  illustrates a security policy expression using assertions defined in wssecuritypolicy wssecuritypolicy example  use of web services policy with security policy assertions                  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    wspexactlyone     wspall        spsignedparts           spbody        spsignedparts     wspall     wspall        spencryptedparts           spbody        spencryptedparts     wspall   wspexactlyone wsppolicy lines  represent one policy alternative for signing a message body lines  represent a second policy alternative for encrypting a message body lines  illustrate the exactlyone policy operator policy operators group policy assertions into policy alternatives a valid interpretation of the policy above would be that an invocation of a web service will either sign or encrypt the message body  notations and terminology this section specifies the notations namespaces and terminology used in this specification  notational conventions this specification uses the following syntax within normative outlines the syntax appears as an xml instance but values in italics indicate data types instead of literal values characters are appended to elements and attributes to indicate cardinality   or    or more   or more the character  is used to indicate an exclusive choice between alternatives the characters  and  are used to indicate that contained items are to be treated as a group with respect to cardinality or choice this document relies on the xml information set xml information set information item properties are indicated by the style infoset property xml namespace prefixes see table  are used to indicate the namespace of the element or attribute being defined the ellipses characters  are used to indicate a point of extensibility that allows other element or attribute information items elements and attributes defined by this specification are referred to in the text of this document using xpath  xpath  expressions extensibility points are referred to using an extended version of this syntax an element extensibility point is referred to using any in place of the element name this indicates that any element name can be used from any namespace unless specified otherwise such as in section  policy operators an attribute extensibility point is referred to using @any in place of the attribute name this indicates that any attribute name can be used from any namespace normative text within this specification takes precedence over normative outlines which in turn take precedence over the xml schema xml schema structures descriptions  extensibility within normative outlines in this specification ellipses ie  indicate a point of extensibility that allows other element or attribute information items information items may be added at the indicated extension points but must not contradict the semantics of the element information item indicated by the parent or owner property of the extension in this context if an attribute information item is not recognized it should be ignored if an element information item is not recognized it must be treated as a policy assertion unless specified otherwise such as in section  policy references  xml namespaces this specification uses a number of namespace prefixes throughout they are listed in table  note that the choice of any namespace prefix is arbitrary and not semantically significant see xml namespaces table  prefixes and namespaces used in this specification prefix namespace specification sp httpdocsoasisopenorgwssxwssecuritypolicy wssecuritypolicy wsam httpwwwworgaddressingmetadata wsaddressing metadata wsp httpwwwworgnswspolicy this specification wsu httpdocsoasisopenorgwssoasiswsswssecurityutilityxsd wssecurity  xs httpwwwworgxmlschema xml schema structures all information items defined by this specification are identified by the xml namespace uri xml namespaces httpwwwworgnswspolicy a normative xml schema xml schema structures xml schema datatypes document can be obtained indirectly by dereferencing the namespace document at the wspolicy  namespace uri it is the intent of the wc web services policy working group that the web services policy   framework and web services policy   attachment xml namespace uri will not change arbitrarily with each subsequent revision of the corresponding xml schema documents as the specifications transition through candidate recommendation proposed recommendation and recommendation status however should the specifications revert to working draft status and a subsequent revision published as a wd cr or pr draft results in nonbackwardly compatible changes from a previously published wd cr or pr draft of the specification the namespace uri will be changed accordingly under this policy the following are examples of backwards compatible changes that would not result in assignment of a new xml namespace uri addition of new global element attribute complextype and simpletype definitions addition of new elements or attributes in locations covered by a previously specified wildcard modifications to the pattern facet of a type definition for which the valuespace of the previous definition remains valid or for which the valuespace of the vast majority of instances would remain valid modifications to the cardinality of elements ie modifications to minoccurs or maxoccurs attribute value of an element declaration for which the valuespace of possible instance documents conformant to the previous revision of the schema would still be valid with regards to the revised cardinality rule  terminology the keywords must must not required shall shall not should should not recommended may and optional in this document are to be interpreted as described in rfc  ietf rfc  we introduce the following terms that are used throughout this document collection the items in a collection in this specification are unordered and may contain duplicates ignorable policy assertion an ignorable policy assertion is an assertion that may be ignored for purposes of determining the compatibility of alternatives in policy intersection in a lax mode as defined in  policy intersection nested policy expression a nested policy expression is a policy expression that is an element information item in the children property of a policy assertion policy a policy is a potentially empty collection of policy alternatives policy alternative a policy alternative is a potentially empty collection of policy assertions policy assertion a policy assertion represents a requirement a capability or other property of a behavior policy assertion parameter a policy assertion parameter qualifies the behavior indicated by a policy assertion policy assertion type a policy assertion type represents a class of policy assertions and implies a schema for the assertion and assertionspecific semantics policy attachment a policy attachment is a mechanism for associating policy with one or more policy scopes policy expression a policy expression is an xml infoset representation of a policy either in a normal form or in an equivalent compact form policy scope a policy scope is a collection of policy subjects to which a policy may apply policy subject a policy subject is an entity eg an endpoint message resource operation with which a policy can be associated  policy model this section defines an abstract model for policies and for operations upon policies the descriptions below use xml infoset terminology for convenience of description however this abstract model itself is independent of how it is represented as an xml infoset  policy assertion definition a policy assertion represents a requirement a capability or other property of a behavior a policy assertion identifies a behavior that is a requirement or capability of a policy subject definition a policy subject is an entity eg an endpoint message resource operation with which a policy can be associated  assertions indicate domainspecific eg security transactions semantics and are expected to be defined in separate domainspecific specifications an assertion may indicate that it is an ignorable policy assertion see  ignorable policy assertions definition an ignorable policy assertion is an assertion that may be ignored for purposes of determining the compatibility of alternatives in policy intersection in a lax mode as defined in  policy intersection by default an assertion is not ignorable for policy intersection assertions are typed by the authors that define them definition a policy assertion type represents a class of policy assertions and implies a schema for the assertion and assertionspecific semantics the policy assertion type is identified only by the xml infoset namespace name and local name properties that is the qualified name or qname of the root element information item representing the assertion assertions of a given type must be consistently interpreted independent of their policy subjects authors may define that an assertion contains a policy expression as defined in  policy expression as one of its children nested policy expressions are used by authors to further qualify one or more specific aspects of the parent policy assertion the qualification may indicate a relationship or context between the parent policy assertion and a nested policy expression for example within a security domain security policy authors may define an assertion describing a set of security algorithms to qualify the specific behavior of a security binding assertion a parent policy assertion of one domain may also serve as a container for the nested policy expression from another domain the xml infoset of a policy assertion may contain a nonempty attributes property andor a nonempty children property such properties excluding the attribute and element information items from the wspolicy language xml namespace name are policy assertion parameters and may be used to parameterize the behavior indicated by the assertion definition a policy assertion parameter qualifies the behavior indicated by a policy assertion for example an assertion identifying support for a specific reliable messaging mechanism might include an attribute information item to indicate how long an endpoint will wait before sending an acknowledgement authors should be cognizant of the processing requirements when defining complex assertions containing policy assertion parameters or nested policy expressions specifically authors are encouraged to consider when the identity of the root element information item alone is enough to convey the requirement or capability  policy alternative definition a policy alternative is a potentially empty collection of policy assertions definition the items in a collection in this specification are unordered and may contain duplicates  an alternative with zero assertions indicates no behaviors an alternative with one or more assertions indicates behaviors implied by those and only those assertions assertions within an alternative are not ordered and thus aspects such as the order in which behaviors indicated by assertions are applied to a subject are beyond the scope of this specification however authors can write assertions that control the order in which behaviors are applied a policy alternative may contain multiple assertions of the same type mechanisms for determining the aggregate behavior indicated by the assertions and their postschemavalidation infoset psvi see xml schema part  xml schema structures content if any are specific to the assertion type and are outside the scope of this document if policy assertion authors did not specify the semantics of repetition of policy assertions of a type that allows neither parameters nor nested policy expressions within a policy alternative then repetition is simply redundancy and multiple assertions of the assertion type within a policy alternative have the same meaning as a single assertion of the type within the policy alternative note depending on the semantics of the domain specific policy assertions regardless if they are qualified by nested policy expressions a combination of the policy assertions can be required to specify a particular behavior for example a combination of two or three assertions from the wssecuritypolicy wssecuritypolicy specification is used to indicate messagelevel security for protecting messages  that is the spasymmetricbinding assertion is used to indicate messagelevel security the spsignedparts assertion is used to indicate the parts of a message to be protected and the spencryptedparts assertion is used to indicate the parts of a message that require confidentiality  policy definition a policy is a potentially empty collection of policy alternatives  a policy with zero alternatives contains no choices a policy with one or more alternatives indicates choice in requirements or capabilities within the policy alternatives are not ordered and thus aspects such as preferences between alternatives in a given context are beyond the scope of this specification alternatives within a policy may differ significantly in terms of the behaviors they indicate conversely alternatives within a policy may be very similar in either case the value or suitability of an alternative is generally a function of the semantics of assertions within the alternative and is therefore beyond the scope of this specification  policies of entities in a web services based system applied to a web services based system policy is used to convey conditions on an interaction between entities requester application provider service web infrastructure component etc an interaction involves one or more message exchanges between two entities it is the responsibility of assertion authors to define the interaction scope of an assertion including any constraints on the policy subjects to which the assertion may be attached and a clear specification of the message s within that interaction scope to which the assertion applies any entity in a web services based system may expose a policy to convey conditions under which it functions satisfying assertions in the policy usually results in behavior that reflects these conditions for example if two entities  requester and provider  expose their policies a requester might use the policy of the provider to decide whether or not to use the service a requester may choose any alternative since each is a valid configuration for interaction with the service but a requester must choose only a single alternative for an interaction with a service since each represents an alternative configuration a policy assertion is supported by an entity in the web services based system if and only if the entity satisfies the requirement or accommodates the capability corresponding to the assertion a policy alternative is supported by an entity if and only if the entity supports all the assertions in the alternative and a policy is supported by an entity if and only if the entity supports at least one of the alternatives in the policy note that although policy alternatives are meant to be mutually exclusive it cannot be decided in general whether or not more than one alternative can be supported at the same time note that an entity may be able to support a policy even if the entity does not understand the type of each assertion in the policy the entity only has to understand the type of each assertion in a policy alternative that the entity supports this characteristic is crucial to versioning and incremental deployment of new assertions because this allows a providers policy to include new assertions in new alternatives while allowing entities to continue to use old alternatives in a backwardcompatible manner  policy expression this section describes how to convey policy in an interoperable form using the xml infoset representation of a policy definition a policy expression is an xml infoset representation of a policy either in a normal form or in an equivalent compact form the normal form see section  normal form policy expression of a policy expression is the most straightforward xml infoset representation of the policy data model equivalent alternative representations allow policy authors to compactly express a policy see section  compact policy expression policy authors might be more interested in the compact form see section  compact policy expression where the outlines and definitions describe what is valid with regards to the policy language xml schema while the policy language xml schema is a representation of the compact form the normal form is more restrictive as outlined in section  normal form policy expression  normal form policy expression to facilitate interoperability this specification defines a normal form for policy expressions that is a straightforward xml infoset representation of a policy enumerating each of its alternatives that in turn enumerate each of their assertions the schema outline for the normal form of a policy expression is as follows  wsppolicy     wspexactlyone      wspall  assertion   assertion  wspall    wspexactlyone wsppolicy  the following describes the element information items defined in the schema outline above wsppolicy a policy expression wsppolicywspexactlyone a collection of policy alternatives if there are no element information items in the children property there are no admissible policy alternatives ie no behavior is admissible wsppolicywspexactlyonewspall a policy alternative a collection of policy assertions if there are no element information items in the children property this is an admissible policy alternative that is empty ie no behavior is specified wsppolicywspexactlyonewspall xml infoset representation of a policy assertion wsppolicy@any additional attributes may be specified but must not contradict the semantics of the owner element if an attribute is not recognized it should be ignored if an assertion in the normal form of a policy expression contains a nested policy expression the nested policy expression must contain at most one policy alternative see  policy assertion nesting to simplify processing and improve interoperability the normal form of a policy expression should be used where practical for example the following is the normal form of a policy expression  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    wspexactlyone     wspall        spsignedparts           spbody        spsignedparts     wspall     wspall        spencryptedparts           spbody        spencryptedparts     wspall   wspexactlyone wsppolicy lines  and lines  express the two alternatives in the policy if the first alternative is selected the message body needs to be signed wssecuritypolicy is supported conversely if the second alternative is selected the message body needs to be encrypted  policy identification a policy expression may be associated with an iri ietf rfc  the schema outline for attributes to associate an iri is as follows  wsppolicy  namexsanyuri                   wsuidxsid  xmlidxsid                   wsppolicy the following describes the attribute information items listed and defined in the schema outline above wsppolicy@name the identity of the policy expression as an absolute iri ietf rfc  if omitted there is no implied value this iri may be used to refer to a policy from other xml documents using a policy attachment mechanism such as those defined in wspolicyattachment web services policy attachment definition a policy attachment is a mechanism for associating policy with one or more policy scopes definition a policy scope is a collection of policy subjects to which a policy may apply wsppolicy@wsuid  @xmlid the identity of the policy expression as an id within the enclosing xml document if omitted there is no implied value the constraints of the xml  xml  id type must be met to refer to this policy expression an irireference may be formed using this value per section  of wssecurity wssecurity  when @wsuid is used note the use of xmlid attribute in conjunction with canonical xml  is inappropriate as described in appendix c of xmlid version  xml id and thus this combination must be avoided see cn  note for example a policy expression identified using xmlid attribute should not be signed using xml digital signature when canonical xml  is being used as the canonicalization method note canonical xml  cn is intended to address the issues that occur with canonical xml  with regards to xmlid the wc xml security specifications maintenance wg has been chartered to address how to integrate canonical xml  with xml security including xml signature secspecmaintwg see httpwwwworgxmlsec the following example illustrates how to associate a policy expression with the absolute iri httpwwwexamplecompoliciesp  wsppolicy        namehttpwwwexamplecompoliciesp        xmlnswsphttpwwwworgnswspolicy     details omitted for readability  wsppolicy the following example illustrates how to associate a policy expression with the irireference p  wsppolicy        wsuidp        xmlnswsphttpwwwworgnswspolicy        xmlnswsuhttpdocsoasisopenorgwssoasiswsswssecurityutilityxsd     details omitted for readability  wsppolicy  compact policy expression to express a policy in a more compact form while still using the xml infoset this specification defines three constructs an attribute to decorate an assertion semantics for recursively nested policy operators and a policy referenceinclusion mechanism each sub section below describes a construct and its equivalent normal form to interpret a compact expression in an interoperable form a policy expression in the compact form can be converted see section  normalization to the normal form see section  normal form policy expression a policy expression consists of a wsppolicy wrapper element and zero or more child and descendent elements  optional policy assertions to indicate that a policy assertion is optional this specification defines an attribute that is a compact authoring style for expressing a pair of alternatives one with and one without that assertion the schema outline for this attribute is as follows  assertion  wspoptionalxsboolean    assertion the following describes the attribute information item defined in the schema outline above assertion@wspoptional if the actual value see xml schema part  xml schema structures is true the expression of the assertion is semantically equivalent to the following  wspexactlyone   wspall assertion   assertion wspall   wspall  wspexactlyone if the actual value see xml schema part  xml schema structures is false the expression of the assertion is semantically equivalent to the following  wspexactlyone   wspall assertion   assertion wspall wspexactlyone omitting this attribute is semantically equivalent to including it with a value of false policy expressions should not include this attribute with a value of false but policy parsers must accept this attribute with a value of false for example the following compact policy expression  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    spincludetimestamp wspoptionaltrue  wsppolicy is equivalent to the following normal form policy expression  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    wspexactlyone     wspall       spincludetimestamp      wspall     wspall    wspexactlyone wsppolicy the @wspoptional attribute in line  of the first policy expression indicates that the assertion in line  is to be included in a policy alternative whilst excluded from another it is included in lines  and excluded in line  note that @wspoptional does not appear in the normal form of a policy expression  policy assertion nesting any policy assertion may contain a policy expression definition a nested policy expression is a policy expression that is an element information item in the children property of a policy assertion the schema outline for a nested policy expression is  assertion        wsppolicy   wsppolicy     assertion the following describes additional processing constraints on the outline listed above assertionwsppolicy this indicates that the assertion contains a nested policy expression if there is no wsppolicy element information item in the children property the assertion has no nested policy expression if the schema outline for an assertion type requires a nested policy expression but the assertion does not further qualify one or more aspects of the behavior indicated by the assertion type ie no assertions are needed in the nested policy expression the assertion must include an empty wsppolicy element information item in its children property as explained in section  policy operators this is equivalent to a nested policy expression with a single alternative that has zero assertions note this specification does not define processing for arbitrary wsppolicy element information items in the descendants of an assertion parameter eg in the children property of one of the children as in wsppolicy   lorem       ipsum           wsppolicy                       wsppolicy       ipsum   loremwsppolicy policy assertions containing a nested policy expression are normalized recursively the nesting of a policy expression and a wsppolicy child is retained in the normal form but in the normal form each nested policy expression contains at most one policy alternative if an assertion a contains a nested policy expression e and if e contains more than one policy alternative a is duplicated such that there are as many instances of a as choices in e and the nested policy expression of a duplicate a contains a single choice this process is applied recursively to the assertions within those choices and to their nested policy expression if any intuitively if a compact policy is thought of as a tree whose branches have branches etc in the normal form a policy is a stump with straight vines for example consider the following policy expression with nested policy expressions in a compact form  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    sptransportbinding     wsppolicy       spalgorithmsuite         wsppolicy           wspexactlyone             spbasicrsa              sptripledesrsa            wspexactlyone         wsppolicy       spalgorithmsuite       sptransporttoken         wsppolicy               sphttpstoken                 wsppolicy               sphttpstoken         wsppolicy       sptransporttoken            details omitted for readability       wsppolicy    sptransportbinding wsppolicy lines  in this policy expression contain a single transport binding security policy assertion within its nested policy expression lines  is an algorithm suite assertion lines  whose nested policy expression lines  contains two policy alternatives lines  generally a nested policy expression implies recursive processing in the example above the behavior indicated by the transport binding assertion requires the behavior indicated by one of the assertions within the algorithm suite assertion the example above is equivalent to the following  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    wspexactlyone     wspall       sptransportbinding         wsppolicy           spalgorithmsuite             wsppolicy               spbasicrsa              wsppolicy           spalgorithmsuite           sptransporttoken             wsppolicy                   sphttpstoken                     wsppolicy                   sphttpstoken             wsppolicy           sptransporttoken                details omitted for readability          wsppolicy       sptransportbinding     wspall     wspall       sptransportbinding         wsppolicy           spalgorithmsuite             wsppolicy               sptripledesrsa              wsppolicy           spalgorithmsuite           sptransporttoken             wsppolicy                   sphttpstoken                     wsppolicy                   sphttpstoken             wsppolicy           sptransporttoken                details omitted for readability          wsppolicy       sptransportbinding     wspall   wspexactlyone wsppolicy in the listing above the transport binding and its nested policy expression have been duplicated once for each of the nested alternatives in lines  of the compact policy the first alternative lines  contains a single nested algorithm suite alternative line  as does the second alternative lines  and   policy operators policies are used to convey a set of capabilities requirements and general characteristics of entities see  introduction these are generally expressible as a set of policy alternatives policy operators wsppolicy wspall and wspexactlyone elements are used to group policy assertions into policy alternatives to compactly express complex policies policy operators may be recursively nested that is one or more instances of wsppolicy wspall andor wspexactlyone may be nested within wsppolicy wspall andor wspexactlyone the schema outline for the wsppolicy element in the compact form is as follows  wsppolicy      wsppolicy wsppolicy      wspexactlyonewspexactlyone               wspallwspall      wsppolicyreference  wsppolicyreference           wsppolicy the following describes the attribute and element information items defined in the schema outline above wsppolicy this element is the wsppolicy operator wsppolicywsppolicy this element is a nested wsppolicy operator wsppolicywspexactlyone this element is a nested wspexactlyone operator wsppolicywspall this element is a nested wspall operator wsppolicywsppolicyreference this element references a policy expression to be included per section  policy inclusion wsppolicy@any additional attributes may be specified but must not contradict the semantics of the owner element if an attribute is not recognized it should be ignored wsppolicyany additional elements may be specified such elements must not use the web services policy language xml namespace name and must not contradict the semantics of the parent element the schema outline for the wspexactlyone element in the compact form is as follows  wspexactlyone    wsppolicy  wsppolicy      wspexactlyonewspexactlyone      wspallwspall      wsppolicyreference  wsppolicyreference           wspexactlyone the following describes the attribute and element information items defined in the schema outline above wspexactlyone this element is the wspexactlyone operator wspexactlyonewsppolicy this element is a nested wsppolicy operator wspexactlyonewspexactlyone this element is a nested wspexactlyone operator wspexactlyonewspall this element is a nested wspall operator wspexactlyonewsppolicyreference this element references a policy expression to be included per section  policy inclusion wspexactlyoneany additional elements may be specified such elements must not use the web services policy language xml namespace name and must not contradict the semantics of the parent element the schema outline for the wspall element in the compact form is as follows  wspall    wsppolicy  wsppolicy      wspexactlyonewspexactlyone      wspallwspall      wsppolicyreference  wsppolicyreference           wspall the following describes the attribute and element information items defined in the schema outline above wspall this element is the wspall operator wspallwsppolicy this element is a nested wsppolicy operator wspallwspexactlyone this element is a nested wspexactlyone operator wspallwspall this element is a nested wspall operator wspallwsppolicyreference this element references a policy expression to be included per section  policy inclusion wspallany additional elements may be specified such elements must not use the web services policy language xml namespace name and must not contradict the semantics of the parent element note the wspall and wspexactlyone elements do not allow attribute extensibility because such attributes cannot be preserved through normalization the following rules are used to transform a compact policy expression into a normal form policy expression equivalence use of wsppolicy as an operator within a policy expression is equivalent to wspall a collection of assertions in an wspall operator is equivalent to a policy alternative for instance  wspall    assertion      assertion   wspall is equivalent to  wspexactlyone   wspall      assertion        assertion     wspall wspexactlyone empty wspall  expresses a policy alternative with zero policy assertions note that since wsppolicy is equivalent to wspall wsppolicy  is therefore equivalent to wspall  ie a policy alternative with zero assertions wspexactlyone  expresses a policy with zero policy alternatives commutative in line with the previous statements that policy assertions within a policy alternative and policy alternatives within a policy are not ordered see  policy alternative and  policy respectively wspall and wspexactlyone are commutative for example  wspall  assertion    assertion   wspall is equivalent to  wspall  assertion    assertion   wspall and  wspexactlyone    assertion    assertion   wspexactlyone is equivalent to  wspexactlyone    assertion    assertion   wspexactlyone associative wspall and wspexactlyone are associative for example  wspall    assertion     wspall  assertion   wspall wspall is equivalent to  wspall  assertion    assertion   wspall and  wspexactlyone    assertion     wspexactlyone  assertion   wspexactlyone wspexactlyone is equivalent to  wspexactlyone    assertion    assertion   wspexactlyone idempotent wspall and wspexactlyone are idempotent for example  wspall   wspall  assertion    assertion   wspall wspall is equivalent to  wspall  assertion    assertion   wspall and  wspexactlyone   wspexactlyone      assertion    assertion     wspexactlyone wspexactlyone is equivalent to  wspexactlyone    assertion    assertion   wspexactlyone distributive wspall is distributive over wspexactlyone that is a wspall element containing only wspexactlyone child elements is equivalent to a wspexactlyone element containing for each possible combination of one child element from each of the wspexactlyone element over which being distributed a wspall element containing that combination for example  wspall   wspexactlyone      assertion        assertion     wspexactlyone wspall is equivalent to  wspexactlyone   wspall      assertion     wspall   wspall      assertion     wspall wspexactlyone similarly by repeatedly distributing wspall over wspexactlyone  wspall   wspexactlyone      assertion        assertion     wspexactlyone   wspexactlyone      assertion        assertion     wspexactlyone wspall is equivalent to  wspexactlyone   wspall assertion   assertion  wspall   wspall assertion   assertion  wspall   wspall assertion   assertion  wspall   wspall assertion   assertion  wspall wspexactlyone distributing wspall over an empty wspexactlyone is equivalent to no alternatives for example  wspall   wspexactlyone  wspall is equivalent to  wspexactlyone  and  wspall   wspexactlyone      assertion        assertion     wspexactlyone   wspexactlyone  wspall is equivalent to  wspexactlyone  for example given the following compact policy expression  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    sprequirederivedkeys wspoptionaltrue    wspexactlyone     spwssusernametoken      spwssusernametoken    wspexactlyone wsppolicy applying section  optional policy assertions to @wspoptional in line  and distributing wspall over wspexactlyone per section  policy operators for the assertions in lines  yields  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    wspexactlyone     wspall  @wspoptional alternative with assertion        sprequirederivedkeys      wspall     wspall   @wspoptional alternative without    wspexactlyone   wspexactlyone     wspall       spwssusernametoken      wspall     wspall       spwssusernametoken      wspall   wspexactlyone wsppolicy note that the assertion listed in line  in the first listing expands into the two alternatives in lines  in the second listing finally noting that wsppolicy is equivalent to wspall and distributing wspall over wspexactlyone yields the following normal form policy expression  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    wspexactlyone     wspall       sprequirederivedkeys        spwssusernametoken      wspall     wspall       sprequirederivedkeys        spwssusernametoken      wspall     wspall       spwssusernametoken      wspall     wspall       spwssusernametoken      wspall   wspexactlyone wsppolicy note that the two alternatives listed in lines  in the second listing are combined with the two alternatives listed in lines  in the second listing to create four alternatives in the normalized policy lines    and  consider another example given the following compact policy expression  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    sprequirederivedkeys    wspexactlyone     spwssusernametoken      spwssusernametoken    wspexactlyone wsppolicy applying section  optional policy assertions to @wspoptionalfalse in line  and distributing wspall over wspexactlyone per section  policy operators for the assertions in lines  yields  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    wspexactlyone     wspall       sprequirederivedkeys      wspall   wspexactlyone   wspexactlyone     wspall       spwssusernametoken      wspall     wspall       spwssusernametoken      wspall   wspexactlyone wsppolicy note that the assertion listed in line  in the first listing expands into an alternative in lines  in the second listing finally noting that wsppolicy is equivalent to wspall and distributing wspall over wspexactlyone yields the following normal form policy expression  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    wspexactlyone     wspall       sprequirederivedkeys        spwssusernametoken      wspall     wspall       sprequirederivedkeys        spwssusernametoken      wspall   wspexactlyone wsppolicy note that the first alternative listed in lines  in the second listing is combined with the two alternatives listed in lines  in the second listing to create two alternatives in the normalized policy lines  and   policy references the wsppolicyreference element is used to reference policy expressions the semantics of the wsppolicyreference element are determined by the context in which it is used for an example see  policy inclusion the schema outline for the wsppolicyreference element is as follows  wsppolicyreference     urixsanyuri    digestxsbasebinary  digestalgorithmxsanyuri             wsppolicyreference the following describes the attribute and element information items defined in the schema outline above wsppolicyreference this element references a policy expression that is being referenced wsppolicyreference@uri this attribute references a policy expression by an iri for a policy expression within the same xml document the reference should be an irireference to a policy expression identified by an id for an external policy expression there is no requirement that the iri be resolvable retrieval mechanisms are beyond the scope of this specification after retrieval there is no requirement to check that the retrieved policy expression is associated section  policy identification with this iri the iri included in the retrieved policy expression if any may be different than the iri used to retrieve the policy expression wsppolicyreference@digest this attribute is of type xsbasebinary and specifies the digest of the referenced policy expression this is used to ensure the included policy is the expected policy if omitted there is no implied value wsppolicyreference@digestalgorithm this optional uri attribute specifies the digest algorithms being used this specification predefines the default algorithm below although additional algorithms can be expressed uri description httpwwwworgnswspolicyshaexc implied the digest is a sha hash over the octet stream resulting from using the exclusive xml canonicalization defined for xml signature xmlsignature wsppolicyreference@any additional attributes may be specified but must not contradict the semantics of the owner element if an attribute is not recognized it should be ignored wsppolicyreferenceany additional elements may be specified but must not contradict the semantics of the parent element if an element is not recognized it should be ignored  policy inclusion in order to share assertions across policy expressions the wsppolicyreference element may be present anywhere a policy assertion is allowed inside a policy expression this element is used to include the content of one policy expression in another policy expression when a wsppolicyreference element references a wsppolicy element then the semantics of inclusion are simply to replace the wsppolicyreference element with a wspall element whose children property is the same as the children property of the referenced wsppolicy element that is the contents of the referenced policy conceptually replace the wsppolicyreference element and are wrapped in a wspall operator using the wsppolicyreference element a policy expression must not reference itself either directly or indirectly note references that have a @digest attribute should be validated before being included in the example below two policies include and extend a common policy in the first example there is a single policy document containing two policy assertions the expression is given an identifier but not a fully qualified location the second and third expressions reference the first expression by uri indicating the referenced expression is within the document  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy        xmlnswsuhttpdocsoasisopenorgwssoasiswsswssecurityutilityxsd        wsuidprotection    spencryptsignature wspoptionaltrue    spprotecttokens wspoptionaltrue  wsppolicy  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    wsppolicyreference uriprotection    sponlysignentireheadersandbody  wsppolicy  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy    spincludetimestamp    wsppolicyreference uriprotection    sponlysignentireheadersandbody  wsppolicy there are times when it is desirable to reuse a portion of a policy expression generally this can be accomplished by placing the common assertions in a separate policy expression and referencing it  normalization to interpret a compact expression in an interoperable form a compact expression may be converted to the corresponding normal form expression by the following procedure start with the element information item e as defined in the xml information set xml information set of the policy expression the namespace name of e is always httpwwwworgnswspolicy in the base case the local name property of e is policy in the recursive case the local name property of e is policy exactlyone or all expand element information items as defined in the xml information set xml information set in the children property of e that are policy references per section  policy inclusion convert each element information item c in the children property of e into normal form if the namespace name property of c is httpwwwworgnswspolicy and the local name property of c is policy exactlyone or all c is an expression of a policy operator normalize c by recursively applying this procedure otherwise the element information item c is an assertion normalize c per sections  optional policy assertions and  policy assertion nesting apply the policy operator indicated by e to the normalized element information items in its children property and construct a normal form per section  policy operators and  normal form policy expression note that an implementation may use a more efficient procedure and is not required to explicitly convert a compact expression into the normal form as long as the processing results are indistinguishable from doing so  ignorable policy assertions the wspignorable attribute indicates if a policy assertion is an ignorable policy assertion the behavior implied by an ignorable assertion is expected to be a behavior that need not be engaged for successful interoperation with the entity that includes such ignorable assertions in its policy the schema outline for the wspignorable attribute is as follows  assertion  wspignorablexsboolean     assertion the following describes the attribute information item defined in the schema outline above assertion@wspignorable this attribute is of type xsboolean if the actual value see xml schema part  xml schema structures is true the assertion is an ignorable policy assertion if the actual value is false the assertion is not an ignorable policy assertion omitting this attribute is semantically equivalent to including it with a value of false  policy intersection policy intersection is optional but a useful tool when two or more parties express policy and want to limit the policy alternatives to those that are mutually compatible for example when a requester and a provider express requirements on a message exchange intersection identifies compatible policy alternatives if any included in both requester and provider policies policy intersection is a commutative operation performed on two policies that yields a policy that contains a collection of the compatible policy alternatives note while policy intersection at times is analogous with set intersection it does not imply formal set intersection semantics there are two modes for intersection strict and lax how the mode is selected or indicated for the policy intersection is outside the scope of this specification as a first approximation an intersection algorithm is defined below that approximates compatibility of policy assertions in a domainindependent manner mechanisms for determining assertion parameter compatibility are not part of this domainindependent policy intersection determining whether two policy assertions of the same type are compatible may involve domainspecific processing for purposes of determining assertion parameter compatibility domainindependent policy intersection may be extended to include domainspecific processing if a domainspecific intersection processing algorithm is required this will be known from the qname of the specific assertion type involved in the policy alternative however regardless of whether an assertions qname indicates domainspecific processing an implementation of the domainindependent intersection need not apply the domainspecific processing the domainindependent policy intersection algorithm is two policy assertions are compatible if they have the same type and if either assertion contains a nested policy expression the two assertions are compatible if they both have a nested policy expression and the alternative in the nested policy expression of one is compatible with the alternative in the nested policy expression of the other assertion parameters are not part of the domainindependent compatibility determination defined herein but this domainindependent policy intersection may be extended to include domainspecific processing for purposes of determining assertion parameter compatibility if the mode is strict two policy alternatives a and b are compatible if each assertion in a is compatible with an assertion in b and if each assertion in b is compatible with an assertion in a if the mode is lax two policy alternatives a and b are compatible if each assertion in a that is not an ignorable policy assertion is compatible with an assertion in b and if each assertion in b that is not an ignorable policy assertion is compatible with an assertion in a if two alternatives are compatible their intersection is an alternative containing all of the occurrences of all of the assertions from both alternatives ie the bag union of the two regardless of whether or not they are marked with the wspignorabletrue attribute two policies are compatible if an alternative in one is compatible with an alternative in the other if two policies are compatible their intersection is the set of the intersections between all pairs of compatible alternatives choosing one alternative from each policy if two policies are not compatible their intersection has no policy alternatives the result of policy intersection can be zero or more alternatives each alternative may contain more than one assertion of the same type which may come from different input policies see section  policy alternative for mechanisms for determining the aggregate behavior indicated by multiple assertions of the same policy assertion type if policy assertion authors did not specify the semantics of multiple assertions of the same assertion type within a policy alternative and the type and its descendant assertion types within a nested policy expression outline if any do not allow any parameters then multiple assertions of the type within a policy alternative in the intersection result have the same meaning as a single assertion of the type within the policy alternative an entity applies all the behaviors implied by a policy alternative when that policy alternative is chosen from the intersection result see  policies of entities in a web services based system if an entity includes a policy assertion type a in its policy and this policy assertion type a does not occur in an intersected result then that entity should not apply the behavior implied by assertion type a if a policy assertion type z is not included in the input policies being intersected then the intersection result is silent about the behavior implied by the assertion type z as an example of intersection consider two input policies in normal form  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy         policy p    wspexactlyone     wspall  alternative a        spsignedelements         spxpathsenvelopesbodyspxpath       spsignedelements       spencryptedelements         spxpathsenvelopesbodyspxpath       spencryptedelements     wspall     wspall  alternative a        spsignedparts         spbody          spheader                namespacehttpwwwworgaddressing        spsignedparts       spencryptedparts         spbody        spencryptedparts     wspall   wspexactlyone wsppolicy the listing above contains two policy alternatives the first alternative lines  contains two policy assertions one indicates which elements should be signed lines  its type is spsignedelements line  and its parameters include an xpath expression for the content to be signed line  the other assertion lines  has a similar structure type line  and parameters line  the second alternative lines  also contains two assertions each with type line  and line  and parameters lines  and line  as this example illustrates compatibility between two policy assertions is based on assertion type and delegates parameter processing to domainspecific processing  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy         policy p    wspexactlyone     wspall  alternative a        spsignedparts        spencryptedparts         spbody        spencryptedparts     wspall     wspall  alternative a        spsignedelements         spxpathsenvelopesbodyspxpath       spsignedelements     wspall   wspexactlyone wsppolicy because there is only one alternative a in policy p with the same assertion type as another alternative a in policy p the intersection is a policy with a single alternative that contains all of the assertions in a and in a  wsppolicy        xmlnssphttpdocsoasisopenorgwssxwssecuritypolicy        xmlnswsphttpwwwworgnswspolicy         intersection of p and p    wspexactlyone     wspall       spsignedparts          spbody          spheader                namespacehttpwwwworgaddressing        spsignedparts       spencryptedparts         spbody        spencryptedparts       spsignedparts        spencryptedparts         spbody        spencryptedparts     wspall   wspexactlyone wsppolicy note that there are two assertions of the type spsignedparts and two assertions of the type spencryptedparts one from each of the input policies in general whether two assertions of the same type are compatible or repetition is redundancy depends on the domainspecific semantics of the assertion type as mentioned above if the assertions have no parameters and the assertions in nested policiy expressions have no parameters then multiple assertions of the type within a policy alternative in the intersection result have the same meaning as a single assertion of the type within the policy alternative based on the semantics of multiple assertions of the encryptedparts assertion type as specified in the wssecuritypolicy wssecuritypolicy specification one of the spencryptedparts assertion in the above example is redundant whether the two spsignedparts assertions are compatible or one of them is redundant depends on the semantics defined for this assertion type as another example of intersection of wsaddressing assertions that utilize the framework intersection algorithm consider two input policies  wsppolicy      xmlnswsphttpwwwworgnswspolicy      xmlnswsamhttpwwwworgaddressingmetadata    wspexactlyone     wspall         alternative a        wsamaddressing         wsppolicy       wsamaddressing     wspall   wspexactlyone wsppolicy lines  in the above policy expression contain an addressing policy assertion with the empty wsppolicy in line  the empty wsppolicy is a nested policy expression with an alternative that has zero assertions in the example above the addressing assertion indicates the use of addressing without any restriction  wsppolicy      xmlnswsphttpwwwworgnswspolicy      xmlnswsamhttpwwwworgaddressingmetadata    wspexactlyone     wspall        alternative a        wsamaddressing         wsppolicy           wsamanonymousresponses         wsppolicy       wsamaddressing     wspall   wspexactlyone wsppolicy lines  in the above policy expression contain an addressing policy assertion with a nested policy expression in lines  the nested policy expression indicates that the provider requires request messages to use response endpoint eprs that contain the anonymous uri the nested policy expression contains an alternative that has one assertion wsamanonymousresponses the two assertions in alternatives a and a have the same assertion type and have nested policy expressions the nested policy expression within the addressing assertion in the alternative a contains an alternative that has zero assertions the nested policy expression within the addressing assertion in the alternative a contains an alternative that has one assertion the nested policy expressions within these two assertions are incompatible because the alternative in one is incompatible with the alternative in the other therefore the two assertions are incompatible and hence the two alternatives are incompatible  use of iris in policy expressions policy expressions use iris for some identifiers this document does not define a base uri but relies on the mechanisms defined in xml base xml base and rfcs  ietf rfc   ietf rfc  and  ietf rfc  for establishing a base uri against which relative iris can be made absolute  security considerations it is recommended that policies and assertions be integrity protected to permit the detection of tampering this can be done using a technology such as xml dsig xmlsignature ssltls ietf rfc  or wssecurity  wssecurity  policies should not be accepted unless they are signed and have an associated security token to specify the signer has the right to speak for the scope containing the policy that is a relying party shouldnt rely on a policy unless the policy is signed and presented with sufficient credentials to pass the relying parties acceptance criteria it should be noted that the mechanisms described in this document could be secured as part of a soap message soap  soap  messaging framework using wssecurity wssecurity  or embedded within other objects using objectspecific security mechanisms this section describes the security considerations that service providers requestors policy authors policy assertion authors and policy implementers need to consider when exposing consuming and designing policy expressions authoring policy assertions or implementing policy  information disclosure threats a policy is used to represent the capabilities and requirements of a web service policies may include sensitive information malicious consumers may acquire sensitive information fingerprint the service and infer service vulnerabilities these threats can be mitigated by requiring authentication for sensitive information by omitting sensitive information from the policy or by securing access to the policy for securing access to policy metadata policy providers can use mechanisms from other web services specifications such as wssecurity wssecurity  and wsmetadataexchange wsmetadataexchange   spoofing and tampering threats if a policy expression is unsigned it could be easily tampered with or replaced to prevent tampering or spoofing of policy requestors should discard a policy unless it is signed by the provider and presented with sufficient credentials requestors should also check that the signer is actually authorized to express policies for the given policy subject  downgrade threats a policy may offer several alternatives that vary from weak to strong set of requirements an adversary may interfere and remove all the alternatives except the weakest one say no security requirements or an adversary may interfere and discard this policy and insert a weaker policy previously issued by the same provider policy authors or providers can mitigate these threats by sunsetting older or weaker policy alternatives requestors can mitigate these threats by discarding policies unless they are signed by the provider  repudiation threats malicious providers may include policy assertions in its policy whose behavior cannot be verified by examining the wire message from the provider to requestor in general requestors have no guarantee that a provider will behave as described in the providers policy expression the provider may not and perform a malicious activity for example say the policy assertion is privacy notice information and the provider violates the semantics by disclosing private information requestors can mitigate this threat by discarding policy alternatives which include assertions whose behavior cannot be verified by examining the wire message from the provider to requestor assertion authors can mitigate this threat by not designing assertions whose behavior cannot be verified using wire messages  denial of service threats malicious providers may provide a policy expression with a large number of alternatives a large number of assertions in alternatives deeply nested policy expressions or chains of policyreference elements that expand exponentially see the chained sample below this is similar to the wellknown dtd entity expansion attack policy implementers need to anticipate these rogue providers and use a configurable bound with defaults on number of policy alternatives number of assertions in an alternative depth of nested policy expressions etc example  chained policy reference elements  wsppolicy wsuidp   wsppolicyreference urip    wsppolicyreference urip wsppolicy                  wsppolicy wsuidp    wsppolicyreference urip   wsppolicyreference urip wsppolicy                  wsppolicy wsuidp    wsppolicyreference urip   wsppolicyreference urip wsppolicy                   policy@wsuid p through p                   wsppolicy wsuidp    wsppolicyreference urip   wsppolicyreference urip wsppolicy                  wsppolicy wsuidp    mtomoptimizedmimeserialization  wsppolicy malicious providers may provide a policy expression that includes multiple policyreference elements that use a large number of different internet addresses these may require the consumers to establish a large number of tcp connections policy implementers need to anticipate such rogue providers and use a configurable bound with defaults on number of policyreference elements per policy expression  general xml considerations implementers of web services policy language should be careful to protect their software against general xml threats like deeply nested xml or xml that contains malicious content  conformance an element information item whose namespace name is httpwwwworgnswspolicy and whose local part is policy or policyreference conforms to this specification if it is valid according to the xml schema xml schema structures for that element as defined by this specification httpwwwworgwspolicyxsd and additionally adheres to all the constraints contained in this specification such a conformant element information item constitutes a policy expression a the applicationwspolicyxml media type this appendix defines the applicationwspolicyxml media type which can be used to describe web services policy documents serialized as xml either wsppolicy or wsppolicyattachment could be the root element of such a document a registration mime media type name application mime subtype name wspolicyxml required parameters none optional parameters charset this parameter has identical semantics to the charset parameter of the applicationxml media type as specified in ietf rfc  encoding considerations identical to those of applicationxml as described in ietf rfc  section  as applied to the web services policy document infoset security considerations see section  security considerations in this document and the security consideration section in web services policy attachment interoperability considerations there are no known interoperability issues published specifications this document and web services policy attachment applications which use this media type this new media type is being registered to allow for deployment of web services policy and references to web services policy on the world wide web additional information file extension wspolicy fragment identifiers a syntax identical to that of applicationxml as described in ietf rfc  base uri as specified in ietf rfc  section  also see section  use of iris in policy expressions in this document and section  use of iris in policy attachment in web services policy attachment macintosh file type code text person and email address to contact for further information world wide web consortium webhuman@worg intended usage common authorchange controller the web services policy  specification set is a work product of the world wide web consortiums web service policy working group the wc has change control over these specifications b references b normative references web services policy attachment web services policy   attachment a s vedamuthu d orchard f hirsch m hondo p yendluri t boubez and  yalinalp editors world wide web consortium  september  this version of the specification of the web services policy   attachment specification is httpwwwworgtrrecwspolicyattach the latest version of web services policy   attachment is available at httpwwwworgtrwspolicyattach ietf rfc  key words for use in rfcs to indicate requirement levels s bradner author internet engineering task force march  available at httpwwwietforgrfcrfctxt ietf rfc  uniform resource identifier uri generic syntax  t bernerslee r fielding and l masinter authors network working group january  available at httpwwwietforgrfcrfctxt ietf rfc  internationalized resource identifiers iris  m duerst and m suignard authors internet engineering task force january  available at httpwwwietforgrfcrfctxt wssecurity  web services security soap message security  wssecurity  a nadalin c kaler p hallambaker and r monzillo editors organization for the advancement of structured information standards march  available at httpdocsoasisopenorgwssoasiswsssoapmessagesecuritypdf xml base xml base jonathan marsh editor world wide web consortium  june  this version of the xml base recommendation is httpwwwworgtrrecxmlbase the latest version of xml base is available at httpwwwworgtrxmlbase xml  extensible markup language xml  fourth edition t bray j paoli c m sperbergmcqueen and e maler editors world wide web consortium  february  revised  august  this version of the xml  recommendation is httpwwwworgtrrecxml the latest version of xml  is available at httpwwwworgtrrecxml xml id xmlid version  j marsh d veillard and n walsh editors world wide web consortium  september  this version of the xmlid version  recommendation is httpwwwworgtrrecxmlid the latest version of xmlid version  is available at httpwwwworgtrxmlid xml information set xml information set second edition j cowan and r tobin editors world wide web consortium  october  revised  february  this version of the xml information set recommendation is httpwwwworgtrrecxmlinfoset the latest version of xml information set is available at httpwwwworgtrxmlinfoset xml namespaces namespaces in xml  t bray d hollander a layman and r tobin editors world wide web consortium  january  revised  august  this version of the namespaces in xml recommendation is httpwwwworgtrrecxmlnames the latest version of namespaces in xml is available at httpwwwworgtrrecxmlnames xml schema structures xml schema part  structures second edition h thompson d beech m maloney and n mendelsohn editors world wide web consortium  may  revised  october  this version of the xml schema part  recommendation is httpwwwworgtrrecxmlschema the latest version of xml schema part  is available at httpwwwworgtrxmlschema xml schema datatypes xml schema part  datatypes second edition p byron and a malhotra editors world wide web consortium  may  revised  october  this version of the xml schema part  recommendation is httpwwwworgtrrecxmlschema the latest version of xml schema part  is available at httpwwwworgtrxmlschema ietf rfc  ietf rfc  xml media types m murata s st laurent d kohn july  see httpwwwietforgrfcrfctxt b other references cn  note known issues with canonical xml  cn j kahan and k lanz editors world wide web consortium  december  available at httpwwwworgtrnotecnissues ietf rfc  ietf rfc  the tls protocol t dierks c allen january  see httpwwwietforgrfcrfctxt soap  simple object access protocol soap  d box et al editors world wide web consortium  may  available at httpwwwworgtrnotesoap soap  messaging framework soap version  part  messaging framework m gudgin m hadley n mendelsohn jj moreau h frystyk nielsen editors world wide web consortium  june  revised  april  this version of the soap version  part  messaging framework recommendation is httpwwwworgtrrecsoappart the latest version of soap version  part  messaging framework is available at httpwwwworgtrsoappart secspecmaintwg xml security specifications maintenance working group  see httpwwwworgxmlsec uddi api  uddi version  api t bellwood editor organization for the advancement of structured information standards  july  this version of uddi version  api is httpuddiorgpubsprogrammersapivpublishedhtm the latest version of the uddi  api is available at httpuddiorgpubsprogrammersapi_vhtm uddi data structure  uddi version  data structure reference c von riegen editor organization for the advancement of structured information standards  july  this version of uddi version  data structures is httpuddiorgpubsdatastructurevpublishedhtm the latest version of the uddi  data structures is available at httpuddiorgpubsdatastructure_vhtm uddi  uddi version  l clment et al editors organization for the advancement of structured information standards  october  this version of the uddi version  is httpwwwoasisopenorgcommitteesuddispecdocspecvuddivhtm the latest version of the uddi  specification is available at httpuddiorgpubsuddi_vhtm wsaddressing metadata web services addressing   metadata m gudgin m hadley t rogers and  yalinalp editors world wide web consortium  september  this version of the web services addressing   metadata is httpwwwworgtrrecwsaddrmetadata the latest version of web services addressing   metadata is available at httpwwwworgtrwsaddrmetadata wssecuritypolicy wssecuritypolicy v a nadalin m goodner m gudgin a barbir and h granqvist editors organization for the advancement of structured information standards  july  available at httpdocsoasisopenorgwssxwssecuritypolicywssecuritypolicyspecospdf namespace document available at httpdocsoasisopenorgwssxwssecuritypolicy wsdl  web services description language wsdl  e christensen et al authors world wide web consortium march  available at httpwwwworgtrnotewsdl wsdl  core language web services description language wsdl version  part  core language r chinnici j j moreau a ryman s weerawarana editors world wide web consortium  june  this version of the wsdl  specification is httpwwwworgtrrecwsdl the latest version of wsdl  is available at httpwwwworgtrwsdl wsmetadataexchange web services metadata exchange wsmetadataexchange k ballinger et al authors bea systems inc computer associates international inc international business machines corporation microsoft corporation inc sap ag sun microsystems and webmethods august  available at httpschemasxmlsoaporgwsmex xmlsignature xmlsignature syntax and processing d eastlake j reagle and d solo editors the internet society  world wide web consortium  february  this version of the xmlsignature syntax and processing recommendation is httpwwwworgtrrecxmldsigcore the latest version of xmlsignature syntax and processing is available at httpwwwworgtrxmldsigcore cn canonical xml  j boyer and g marcy authors wc candidate recommendation  june  this is a work in progress this version is available at httpwwwworgtrcrxmlcn the latest version of canonical xml  is available at httpwwwworgtrxmlcn c acknowledgements nonnormative this document is the work of the wc web services policy working group members of the working group are at the time of writing and by alphabetical order dimitar angelov sap ag abbie barbir nortel networks charlton barreto adobe systems inc sergey beryozkin iona technologies inc vladislav bezrukov sap ag toufic boubez layer  technologies symon chang bea systems inc paul cotton microsoft corporation glen daniels progress software doug davis ibm corporation jacques durand fujitsu limited ruchith fernando wso christopher ferris ibm corporation william henry iona technologies inc frederick hirsch nokia maryann hondo ibm corporation ondrej hrebicek microsoft corporation steve jones layer  technologies tom jordahl adobe systems inc paul knight nortel networks philippe le hgaret wcmit mark little jboss inc mohammad makarechian microsoft corporation ashok malhotra oracle corporation jonathan marsh wso monica martin sun microsystems inc arnaud meyniel axway software jeff mischkinsky oracle corporation dale moberg axway software anthony nadalin ibm corporation david orchard bea systems inc sanjay patil sap ag manjula peiris wso fabian ritzmann sun microsystems inc daniel roth microsoft corporation tom rutt fujitsu limited sanka samaranayake wso felix sasaki wckeio yakov sverdlov ca asir vedamuthu microsoft corporation sanjiva weerawarana wso mit yalinalp sap ag prasad yendluri webmethods a subsidiary of software ag previous members of the working group were jeffrey crump jong lee bob natale eugene osovetsky bijan parsia skip snow seumas soltysik mark templeraston the people who have contributed to discussions on publicwspolicy@worg are also gratefully acknowledged